openapi: 3.1.0
info:
  version: '1'
  title: Zid Merchant API
  description: 'The Zid Merchant API provides a comprehensive set of tools for developers to create applications for merchants to install on their stores. The API allows users to view and edit products and orders, manage customers, and interact with shopping carts. It enables merchants to streamline their store operations and enhance the shopping experience for their customers.'
  contact:
    name: Zid App Market Support
    email: developers@zid.sa
    url: 'mailto:appmarket@zid.sa'
servers:
  - url: 'https://api.zid.sa/v1'
    description: Live Server
  - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
    description: Mock Server
paths:
  /managers/account/profile:
    get:
      tags:
        - Accounts
      summary: Get Manager's Profile
      description: |
        Retrieves the profile data of the authenticated Manager. This includes detailed information about the Manager, their role, associated store, and the set of permissions they hold. 

        This operation is exclusively for users with the Manager role (Store Owner, Store Moderator). Customer roles are not allowed to access this endpoint.

        The system identifies the Manager and the related store via the `X-Manager-Token`. The `Authorization` token validates the user's access to the API.

        For a detailed explanation of user roles and permissions, refer to our [User Roles and Permissions](../docs/user-roles-permissions.md) guide.
      operationId: get-user-profile
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/UserAgent'
      responses:
        '200':
          description: Successful retrieval of the Manager's profile with meta data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile_StoreManager'
        '401':
          $ref: '#/components/responses/401-Unauthorized'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/vat:
    get:
      tags:
        - Stores
      summary: Get List of VAT Settings
      description: 'Return a list of the VAT settings configured on this store. For example, to indicate whether the store VAT is applied on shipping fees or not.'
      operationId: post-vat-settings
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
      responses:
        '200':
          description: List of VAT Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreVatSettings'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/orders/{order-id}/change-order-status':
    post:
      tags:
        - Orders
      summary: Update Order by ID
      description: |-
        Please note that if the order is shipped through an integrated shipping company, then we cannot update the order status from "Ready" to "New".
          <br>
        To deliver the order through a shipping company, you need to change the order status to ready, and send the `inventory_address_id` value with your request, hence shipping companies need to know which pickup point to get the package from. <br> To get a list of your current inventory addresses along with their ids, please check the <a href="https://docs.zid.sa/docs/zid-merchant-api/59b14f9f24f3a-get-inventory-addresses">inventory addresses API</a> endpoint.

        Available order statuses are as follows: (new, preparing, ready, indelivery, delivered, cancelled)
      operationId: post-order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - name: order-id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: number
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_status:
                  type: string
                  description: 'The order status value must be one of the following (new, preparing, ready, indelivery, delivered, cancelled)'
                inventory_address_id:
                  type: string
                  description: The id of the inventory address in the system which will be the pickup location for the shipping company.
                tracking_number:
                  type: string
                  description: The shipping company tracking ID
                tracking_url:
                  type: string
                  description: The shipping company tracking URL
                waybill_url:
                  type: string
                  description: Direct link for the shipping waybill
              required:
                - order_status
      responses:
        '200':
          description: Single order status updated
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/customers:
    get:
      tags:
        - Customers
      summary: List of Customers
      description: This endpoint will return a list of the store customers along with other metadata such as the total number of customers and the total number of orders for each customer.
      operationId: get-customers
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: page
          in: query
          description: 'pagination, number of page for every call'
          required: true
          style: form
          explode: true
          schema:
            type: string
            examples:
              - '10'
        - name: per_page
          in: query
          description: number of records for every page
          required: true
          style: form
          explode: true
          schema:
            type: string
            examples:
              - '5'
      responses:
        '200':
          description: 'List of customers, their total count, and details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-all-customers'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/settings:
    post:
      tags:
        - Gift Cards
      summary: Update Store Settings
      description: Update the settings of the store.
      operationId: update-store-settings
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreSettings'
      responses:
        '200':
          description: Settings updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreSettings'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    get:
      tags:
        - Gift Cards
      summary: Get Store Settings
      description: Retrieve the settings of the store.
      operationId: get-store-settings
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreSettings'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /attributes:
    get:
      tags:
        - Product Attributes
      summary: Get Product Attributes
      description: Use this endpoint to retrieve the Product Attributes of a certain store.
      operationId: get-product-attributes
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/StoreId'
      responses:
        '200':
          description: List of Product Attributes set in the given store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttributes'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    post:
      tags:
        - Product Attributes
      summary: Add a New Product Attribute
      description: Add new product attributes for a certain Role
      operationId: post-new-attribute
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
      requestBody:
        description: The Request Body that contain the new attribute
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  properties:
                    en:
                      type: string
                    ar:
                      type: string
      responses:
        '200':
          description: List of attributes by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttribute'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/attributes/{Attribute-Id}':
    get:
      tags:
        - Product Attributes
      summary: Retrieve a product attribute
      description: Use this endpoint to retrieve a specific product attribute using its id
      operationId: get-product-attribute
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
      responses:
        '200':
          description: Retrieve a single attribute by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttribute'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - Product Attributes
      summary: Delete a product attribute
      description: Delete a certain ID using its id
      operationId: delete-attribute
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {}
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - Product Attributes
      summary: Update a product attribute
      description: Use to update the value of a single attribute for a certain Role
      operationId: update-attribute
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
      requestBody:
        description: The Request Body that contain the new attribute values
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
      responses:
        '200':
          description: The updated attribute value.
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/attributes/{Attribute-Id}/presets':
    get:
      tags:
        - Product Attribute Presets
      summary: Get attribute presets
      description: Presets allow adding attributes quickly and easily in a certain language. This endpoint retrieves all the presets.
      operationId: get-attribute-presets
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
      responses:
        '200':
          description: List of attribute presets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-presets'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - Product Attribute Presets
      summary: Create Attribute Preset
      description: Use this endpoint to add a new attributes preset
      operationId: post-attribute-preset
      parameters:
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
      requestBody:
        description: The Request Body that contain the new attribute preset
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: object
                  properties:
                    ar:
                      type: string
                    en:
                      type: string
      responses:
        '200':
          description: Json Represent The New Attribute Preset Values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-post-presets'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /products/:
    post:
      tags:
        - Products
      summary: Create a new product
      description: |-
        Use this endpoint to create a single product. 

        To add options (variants) to an existing product, you can simply 
        populate the `variants` array as shown in the request body below. 
        Alternatively, you can use the [Add Product Variants](../reference/merchant-api.yaml/paths/~1products~1{product_id}~1options/post) endpoint.
      operationId: post-single-product
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/RoleM'
      requestBody:
        $ref: '#/components/requestBodies/ProductCreate'
      responses:
        '201':
          description: Created product is displayed
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    get:
      tags:
        - Products
      summary: Retrieve a list of products
      description: |
        This operation retrieves a list of products associated with a given Store ID. The results are paginated and can be controlled with the parameters `page_size` and `page`. 

        Additionally, products can be filtered by attribute values using the `attribute_values` parameter, which accepts comma-separated values applicable to any attribute (color, brand, size, etc.).
      operationId: get-products
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AccessTokenOptional'
        - $ref: '#/components/parameters/AuthorizationTokenOptional'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - name: attribute_values
          in: query
          description: Comma-separated attribute values to filter products.
          schema:
            type: string
            examples:
              - 'nike,black,large'
          examples:
            default:
              value: 'nike,black,large'
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - Products
      summary: Bulk update of products using their IDs or SKUs
      description: This endpoint allows you to update multiple products at once by specifying their IDs or SKUs along with the new data. This makes managing large inventory updates more efficient.
      operationId: update-bulk-products
      parameters:
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/RoleM'
      requestBody:
        description: List of products with their IDs/SKUs and new data to be updated.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Successfully updated the bulk of products information.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/':
    get:
      tags:
        - Products
      summary: Get a Product by ID
      description: |
        Get product by ID as *Manager* or as *Customer*. 

        Managers need to provide the `Authorization` and `X-Manager-Token` headers, and the `Role` should be set to `Manager`. 

        Customers don't need an authorization token, and the `Role` should be set to `Customer`.

        Both Customer and Manager get essentially the same object with two key differences for managers:
        1. In the Manager response, both the `name` field and the `value` field in the `attributes` array are objects containing "ar" (Arabic) and "en" (English) strings, while in the Customer response, they are just single strings.
        2. The Manager response contains two additional fields: `created_at` and `updated_at`, which provide timestamps for when the product was created and last updated.

        These are the main structural differences between the two responses. Other than that, they share the same structure, including the nested arrays and objects.
      operationId: get-a-product-by-id
      parameters:
        - name: Accept-Language
          in: header
          description: Preferred language for the response (No effect for Managers; defaults to `en` for Customers if not provided).
          schema:
            type: string
            enum:
              - ar
              - en
        - $ref: '#/components/parameters/RoleMC'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - title: Manager's view of a Product
                    allOf:
                      - $ref: '#/components/schemas/Product'
                  - title: Customer's view of a Product
                    allOf:
                      - $ref: '#/components/schemas/Product_CustomerView'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    patch:
      tags:
        - Products
      summary: Update an existing product.
      description: |
        Use this endpoint to update an existing product's details.

        To modify or add options (variants) to the product, populate the `variants` 
        array in the request body. Each object in the `variants` array can either 
        update an existing variant (by specifying its `id`) or add a new variant (if `id` is omitted).

        Alternatively, you can use the 
        [Add Product Variants](../reference/merchant-api.yaml/paths/~1products~1{product_id}~1options/post) 
        endpoint to add new variants to the product.
      operationId: update-product
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: New product data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product information is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - Products
      summary: Delete a product.
      description: Delete a product by its ID.
      operationId: delete-product
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '204':
          description: No Content.
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/images':
    get:
      tags:
        - Product Images
      summary: Get List of images of a product.
      description: Retrieve a list with all images available for a certain product using product id.
      operationId: get-list-of-images
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - name: page_size
          in: query
          description: number of records for every page with max 100 records
          required: true
          style: form
          explode: true
          schema:
            type: string
            examples:
              - '1'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          description: List of images available for the specified products and their available details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-images'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - Product Images
      summary: Add an image to a product
      description: Use this endpoint to add a single image to a product
      operationId: post-product-image
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: ''
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  contentMediaType: application/octet-stream
                alt_text:
                  type: string
              required:
                - image
                - alt_text
      responses:
        '200':
          description: ''
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/images/{Image-Id}':
    delete:
      tags:
        - Product Images
      summary: Delete a product image
      description: Delete a specific product image by using the image id and product id
      operationId: delete-image
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - name: Image-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          description: Single product image is deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-images'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - Product Images
      summary: Update a product Image Order
      description: use this endpoint to reorder an image's appearance for a product.
      operationId: update-image
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - name: Image-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: The new display order for this image
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_order:
                  type: number
      responses:
        '200':
          description: image order is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-patch-image-order'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/stocks/':
    get:
      tags:
        - Product Stock (Multi-Inventory)
        - Multi-Inventory
      summary: List Product Stocks
      description: |
        Retrieve a list of all product stocks for a specific product.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          description: Successful operation. Returns the product stocks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStocks'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    post:
      tags:
        - Product Stock (Multi-Inventory)
        - Multi-Inventory
      summary: Add Product Stock
      description: |
        Add a new product stock for a specific product.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        $ref: '#/components/requestBodies/ProductStockCreate'
      responses:
        '200':
          description: Successful operation. Returns the created product stock.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStock'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    patch:
      tags:
        - Product Stock (Multi-Inventory)
        - Multi-Inventory
      summary: Bulk Update Product Stocks
      description: |
        Bulk update product stocks through locations. It is recommended when updating multiple stocks.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        $ref: '#/components/requestBodies/ProductStockUpdate'
      responses:
        '204':
          description: Successful operation. No content returned.
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/products/{product_id}/stocks/{stock_id}':
    get:
      tags:
        - Product Stock (Multi-Inventory)
        - Multi-Inventory
      summary: Get Product Stock by ID
      description: |
        Retrieve specific product stock data by its unique ID.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductStockId'
      responses:
        '200':
          description: Successful operation. Returns the product stock data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStock'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    patch:
      tags:
        - Product Stock (Multi-Inventory)
        - Multi-Inventory
      summary: Update Single Product Stock
      description: |
        Update a single product stock by its unique ID. It is not recommended when handling lots of stocks.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductStockId'
      requestBody:
        $ref: '#/components/requestBodies/ProductStockUpdate'
      responses:
        '200':
          description: Successful operation. Returns the updated product stock.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStock'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /products/ordering:
    post:
      tags:
        - Product Manual Sorting
      summary: Set Custom Product Order
      description: Sets a custom ordering of products by accepting an ordered list of product IDs. This manual sorting can also be applied to a specific category when the category ID is passed in the body.
      operationId: post-sorting
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
      requestBody:
        description: List of products with given category ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  examples:
                    - - d22fb4a6-cbcf-464c-8877-6cbf3df52056
                      - d22fb4a6-cbcf-46g5-8877-6c367f52053
                category:
                  type: integer
              required:
                - products
      responses:
        '200':
          description: Products Sorted Successfully in te given category
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - Product Manual Sorting
      summary: Reset the manual sorting of all products
      description: Delete any manual sorting that was done on any of the store products.
      operationId: delete-sorting
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
      responses:
        '200':
          description: 'Product sorting is reset successfully  '
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/notifications':
    post:
      tags:
        - Product Notifications
      summary: Product Availability Notification
      description: Sign up to receive a notification by email when the specified product becomes available again in the store.
      operationId: post-notification
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                language:
                  type: string
                  examples:
                    - ar
              required:
                - email
                - language
          application/json:
            schema:
              type: object
            examples:
              example-1:
                value: {}
      responses:
        '200':
          description: Notification add for posted email.
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /products/export:
    post:
      tags:
        - Product Import/Export
      summary: Email All Products to Store Owner
      description: Sends an email to the store owner containing all the store's products in CSV format.
      operationId: products-export
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
      responses:
        '200':
          description: Products list is sent to the owner's Email
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/options':
    post:
      tags:
        - Product Customizations
      summary: Add Product Variants
      description: 'Creates child variants for a given product by defining choices for its attributes. If the given product is a stand-alone product (not a parent and has no children), this operation transforms it into a parent product. To create variants, first create product attributes for the store using the Create Attribute endpoint, and then define choices for them (e.g., size choices like ''small'', ''big'', etc.). Each choice is an object that accepts values in different languages (currently, only English and Arabic are supported). This endpoint accepts an array of attributes and their choices; variants are created using the cartesian product of these attribute values, resulting in all possible combinations.'
      operationId: add-product-variants
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: Add Product Variants
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: Product Variants Added Successfully
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/custom_options_fields':
    post:
      tags:
        - Product Customizations
      summary: Insert Custom Options to a Product
      description: 'Adds custom options to a product, allowing customers to choose from a predefined set of options while making a purchase. Custom options can be used to offer choices such as gift wrapping, warranty options, or other additional services.'
      operationId: update-custom-options
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: object
                  properties:
                    ar:
                      type: string
                choices:
                  type: array
                  items:
                    type: object
                    properties:
                      ar:
                        type: string
                      en:
                        type: string
                      price:
                        type: string
                hint:
                  type: object
                  properties:
                    ar:
                      type: string
                    en:
                      type: string
      responses:
        '200':
          description: Custom options are added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-post-product-option-custom'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /locations/:
    get:
      tags:
        - Multi-Inventory
      summary: List Store Locations
      description: |
        Retrieves a list of locations associated with the store.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    post:
      tags:
        - Multi-Inventory
      summary: Add a New Location
      description: |
        Adds a new location to the store.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        $ref: '#/components/requestBodies/LocationCreate'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/locations/{location_id}':
    get:
      tags:
        - Multi-Inventory
      summary: Get Store Location by ID
      description: |
        Retrieves details about a specified location.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/LocationId'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    patch:
      tags:
        - Multi-Inventory
      summary: Update a Location by ID
      description: |
        Updates the details of a specified location.

        **Note:** This endpoint is part of the Multi-Inventory feature, which is currently available only to stores with Professional and Enterprise packages. Please ensure the `has_multi_product_inventory` flag is set to `true` for your store before using this endpoint. If you wish to enable this feature, please contact your ZAM representative for assistance.
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/LocationId'
      requestBody:
        description: Updated location data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdate'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /managers/store/inventory-addresses:
    get:
      tags:
        - Stores
      summary: Get Inventory Addresses
      description: This endpoint returns the physical addresses of Merchant inventory and product stock
      operationId: get-inventory-addresses
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
      responses:
        '200':
          description: List of all Inventory Addresses of your store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-all-inventory'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/inventory-addresses/{inventory-address-id}/view':
    get:
      tags:
        - Stores
      summary: Get an Inventory Address by its ID.
      description: This endpoint retrieves the physical location of a specific store inventory based on the requested ID.
      operationId: get-inventory-address
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: inventory-address-id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '19223'
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Requested Inventory Address for the given ID will be retrieved.
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/abandoned-carts:
    get:
      tags:
        - Abandoned Carts
      summary: List Abandoned Carts
      description: |
        Retrieves a list of abandoned carts for a given store. 
        Each entry in the list provides a brief overview of the abandoned cart, 
        including essential details such as the cart ID, customer information, and total value. 

        You can filter the list by date, phase (check allowed values), and the total number of carts.

        For a more detailed view of a specific cart, including product details 
        and additional customer information, refer to the 
        [Get Abandoned Cart Details](../reference/merchant-api.yaml/paths/~1managers~1store~1abandoned-carts~1{cart-id}/get) 
        endpoint using the cart's unique ID.        
      operationId: get-abandoned-carts
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: page
          in: query
          description: 'pagination, number of page for every call'
          required: true
          style: form
          explode: true
          schema:
            type: number
            examples:
              - 5
        - name: page_size
          in: query
          description: number of records for every page with max 100 records
          required: true
          style: form
          explode: true
          schema:
            type: number
            examples:
              - 10
        - name: phase
          in: query
          description: The ordering phase in which the cart was abandoned
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - new
              - login
              - shipping_address
              - shipping_method
              - payment_method
              - verification
              - completed
            examples:
              - new
        - name: search_term
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: products_count
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: number
        - name: date_from
          in: query
          description: 'example: ''2021-01-01'''
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: date_to
          in: query
          description: 'example: ''2021-01-01'''
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: cart_total
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: number
      responses:
        '200':
          description: List of Abandoned Carts with brief details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCartBrief'
                security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/abandoned-carts/{cart-id}':
    get:
      tags:
        - Abandoned Carts
      summary: Get Abandoned Cart Details
      description: |
        Retrieves the detailed information of an abandoned cart based on its ID. 
        An abandoned cart refers to a shopping cart that a customer has added 
        items to but then exits without completing the purchase. 

        The response adheres to the detailed abandoned cart schema, providing 
        comprehensive information about the cart, customer, and associated products.
      operationId: get-abandoned-cart
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: cart-id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Details of the Abandoned Cart given its `cart-id`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCartDetailed'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/categories:
    get:
      tags:
        - Product Categories
      summary: Get all categories
      description: Use this endpoint to retrieve all the available categories for a certain store.
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-all-categories'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/categories/add:
    post:
      tags:
        - Product Categories
      summary: Create Store Category
      description: Use this endpoint to add a new store category.
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                'name[ar]':
                  type: string
                'name[en]':
                  type: string
                'description[ar]':
                  type: string
                'description[en]':
                  type: string
              required:
                - 'name[ar]'
                - 'name[en]'
                - 'description[ar]'
                - 'description[en]'
      responses:
        '200':
          description: Added Category
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/categories/{category_id}/publishing':
    put:
      tags:
        - Product Categories
      summary: Publish/Unpublish a Category
      description: Use this endpoint to either publish or unpublish a certain category.
      operationId: put-managers-store-categories-362018-publishing
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/CategoryId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                is_published:
                  type: string
                  description: True or false value by entering 0 or 1
              required:
                - is_published
      responses:
        '200':
          description: OK
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/managers/store/categories/{category_id}/view':
    get:
      tags:
        - Product Categories
      summary: Get Single Category Details
      description: retrieve a single category using the its id in the system.
      operationId: get-single-category
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/CategoryId'
      responses:
        '200':
          description: Single Category retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-single-category'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/categories/{category_id}/update':
    post:
      tags:
        - Product Categories
      summary: Update a Store Category
      description: Use this endpoint to update only one store category
      operationId: post-category
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/CategoryId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                'name[ar]':
                  type: string
                'name[en]':
                  type: string
                'description[ar]':
                  type: string
                'description[en]':
                  type: string
                _method:
                  type: string
                  examples:
                    - put
              required:
                - 'name[ar]'
                - 'name[en]'
                - 'description[ar]'
                - 'description[en]'
      responses:
        '200':
          description: Single Category Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-single-category'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/categories':
    post:
      tags:
        - Product Categories
      summary: Add a product to a certain category
      description: Use this endpoint to add a new product to a certain category by specifying the product id and providing the category id in the request body.
      operationId: post-one-product
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: The Category ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  examples:
                    - 409
      responses:
        '200':
          description: Product Added Successfully To The Given Category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-post-product-categories'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/categories/{category_id}/':
    delete:
      tags:
        - Product Categories
      summary: Remove Category from Product
      description: |
        This endpoint removes a specified category from a particular product. This action 
        does not delete the category itself, but disassociates it from the product.
      operationId: remove-category-from-product
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/CategoryId'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '204':
          description: The operation was successful. The category has been removed from the product.
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/managers/store/categories/{category_id}/products/delete':
    delete:
      tags:
        - Product Categories
      summary: Detach Category from All Products
      description: |
        Detach a specified category from all products in the store. This essentially 
        disassociates the category from all products it was linked to, but does not delete the category itself.
      operationId: detach-category-from-all-products
      parameters:
        - $ref: '#/components/parameters/AccessToken'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/RoleM'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/CategoryId'
      responses:
        '200':
          $ref: '#/components/responses/200-CategoryDisocciatedFromAllProducts'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/managers/store/categories/{category_id}/products/{product_id}/delete':
    delete:
      tags:
        - Product Categories
      summary: Detach Category from a Product.
      description: Detach a single product from a category by specifying the path parameters `product_id` and `category_id`.
      operationId: delete-products
      parameters:
        - $ref: '#/components/parameters/StoreId'
        - name: X-Manager-Token
          in: header
          required: true
          schema:
            type: string
            examples:
              - eyJpdiI6IlhYOWtsMXc0Rm1BTkMxSWJOTEFvTUE9PSIsInZhbHVlIjoibFJ3NzY2RElJd1BSOTFjYTBPWUNWTlVQTkhza1U0ZTBVWk0xOU9SMzJNa3M3Rnk0NjNMVkR3UzMwdU41NVJxVDA1c1poZU0xUUdxTXczRkhCczVhdHgwSlpmWCtxM285MUJNRG5CWkVNU1pOMW43aFBWbDEvZDJlWTdkNFIwZ0xPZ0tRcFFpeldFVnc1cG1yelkwWXZuN004dUs2MXFla1REb1ByRTlYNlllVjZCNzdkK0RnQUJDYVVtbHJyaWtvVEhZeWJHbXNpNm9NaXlyR3Z4NzFkUT09IiwibWFjIjoiMzU4NzMxMmYzZjU0M2I1MmIzN2MwNzdkMGRhMjYyMzJiNDQ2NmU0MzZlZjM0M2Q4MjRjZTU0Y2RlYTliOTgyNiIsInRhZyI6IiJ9
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            examples:
              - eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMTciLCJqdGkiOiI1MGJlZTAwNmEwODdmYTc3NzNkMTg1NTU5MzI5NjA3NDJhMDFiZDhiMGM2YWZhOWY3Zjc2NTgwODFjOGQ5NjNiYWMyNDMyNjc5ODYwZWQ2YSIsImlhdCI6MTY1NjI1MzQ1OS4zODE2MzEsIm5iZiI6MTY1NjI1MzQ1OS4zODE2MzQsImV4cCI6MTY4Nzc4OTQ1OS4zNzYzOTUsInN1YiI6IjIyNjI2NCIsInNjb3BlcyI6WyJ0aGlyZC1wYXJ0aWVzLWFwaXMiXX0.mmiJE1NHBSjlM8hH0ab3QGbXaqkZPAjS0wLs6KsBNVCY0ZItyf3eqWt4pf8sX5Bs6672cLPKBXFhxS_Po3mchsz3STD411tQABxsqanMr6jwalZpjqYYyFYyldokb2k--q9Q6dWSF-ASf1hG7ZeTUcBxyQoiZpWe8Yny7WYFguTDWQVskvWJLeQ8uZGWgUF1IZSBEryj9wvm-EktbNRUQKFiPDtYAWAUH87r3vYroexoMBJB9BC-4VAEKW2kdWMwzgvHBaZ8gCO-umP8gzcGyxPHOpSZrhNoDVdngqNaOMAar0DPhxzkkgrlKpuMvgOnfiZzWdHGRvMR228QLIai2Cq0HzCBJlbkpZgibFW-gIYa5F7fmau4y5TKO0xWgwqsqZjY4N4HQytkYFpTIHoue67HVnJIAwcfeyD6_R3T1ooXY8ZHdOw56cVUp6sTi0oMtMj3AllabX4Yqg6F46IUrHUDuIXLaPPjDYeeqcDQKgHum7K-ujDlVpEsuRYwLTq1BOld1vUlTJUNpnMcBrkwkTlriCOhYgqur9vldegO0C7fLq2Dfat5poGH7ErcEaKkIrQ18OfHN08scqwYb2Pcq6JPp3R7KBEp0QMp150wYcsiGS0rxAvWynQFjafG68rR7lrmiXjdtr_XwdKCVnUi0HpS99YgL7JO5RhdlKZtQv4
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/CategoryId'
      responses:
        '200':
          description: Product Deleted Successfully From the Given Category
          content:
            application/json:
              schema:
                type: object
              examples:
                example-1:
                  value: {}
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/products/{product_id}/custom_user_input_fields':
    post:
      tags:
        - Product Customizations
      summary: Insert Custom User-Input Fields to a Product
      description: 'Adds custom user-input fields to a product, allowing customers to provide additional information while making a purchase. Custom user input fields can be used to collect data such as personalization details, gift messages, or special instructions.'
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductId'
      requestBody:
        description: Convert Product Into Parent Product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                price:
                  type: string
                hint:
                  type: object
                  properties:
                    en:
                      type: string
                    ar:
                      type: string
                label:
                  type: object
                  properties:
                    ar:
                      type: string
                    en:
                      type: string
      responses:
        '200':
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-post-product-input-custom'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /products/import:
    post:
      tags:
        - Product Import/Export
      summary: Import Products via CSV or xlsx File
      description: 'Imports products to the store using a CSV or xlsx file. The endpoint accepts a file, a Dropbox folder link for images, and an optional `delete_old_products` parameter to delete all previous store products upon successful import.'
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreId'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  type: string
                  contentMediaType: application/octet-stream
                delete_old_products:
                  type: boolean
                response_type:
                  type: string
                  examples:
                    - json
              required:
                - file
                - response_type
      responses:
        '200':
          description: All Products Sent to the Owner Email
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/account/third-parties/authorization-Access-Token:
    get:
      tags:
        - Accounts
      summary: Third Party Access Token
      description: |
        Get a manager token with a long lifespan (6 monthes), since regular manager tokens have a short lifespan and considered unreliable for a system to system integration.
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The requested manager token
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/customers/{customer_id}':
    get:
      tags:
        - Customers
      summary: Get Customer by ID
      description: This endpoint retrieves the details of a certain customer using the Customer's ID.
      operationId: get-customer-by-id
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/CustomerId'
      responses:
        '200':
          description: Requested customer's details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                      mobile:
                        type: string
                      gender:
                        type: string
                      birth_date:
                        type: string
                      verified:
                        type: boolean
                        description: '`true` if Customer had completed identity verification.'
                      is_active:
                        type: boolean
                        description: '`false` if the Merchant had deactivated/banned the Customer from the given store.'
                      is_cod_enabled:
                        type: boolean
                        description: Is the *cash on delivery* option allowed by the Merchant for the Customer.
                      type:
                        type: string
                      business_name:
                        type:
                          - string
                          - 'null'
                      tax_number:
                        type:
                          - string
                          - 'null'
                      commercial_registration:
                        type:
                          - string
                          - 'null'
                      city:
                        type: object
                        properties:
                          id:
                            type: integer
                          national_id:
                            type: integer
                          name:
                            type: string
                          priority:
                            type: integer
                          country_id:
                            type: integer
                          country_name:
                            type: string
                          country_code:
                            type: string
                          ar_name:
                            type: string
                          en_name:
                            type: string
                      nickname:
                        type: string
                      pivotEmail:
                        type: string
                      pivotMobile:
                        type: string
                      order_counts:
                        type: integer
                      total_payments:
                        type: number
                      orders_cost_average:
                        type: number
                      orders:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            code:
                              type: string
                            store_id:
                              type: integer
                            order_url:
                              type: string
                            store_name:
                              type: string
                            shipping_method_code:
                              type: string
                            store_url:
                              type: string
                            order_status:
                              type: object
                              properties:
                                name:
                                  type: string
                                code:
                                  type: string
                            currency_code:
                              type: string
                            customer:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                verified:
                                  type: integer
                                email:
                                  type: string
                                mobile:
                                  type: string
                                note:
                                  type: string
                                type:
                                  type:
                                    - string
                                    - 'null'
                            has_different_consignee:
                              type: integer
                            is_guest_customer:
                              type: integer
                            order_total:
                              type: string
                            order_total_string:
                              type: string
                            has_different_transaction_currency:
                              type: boolean
                            transaction_reference:
                              type:
                                - string
                                - 'null'
                            transaction_amount:
                              type: number
                            transaction_amount_string:
                              type: string
                            issue_date:
                              type: string
                            payment_status:
                              type: string
                            source:
                              type: string
                            source_code:
                              type:
                                - string
                                - 'null'
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            tags:
                              type: array
                              items:
                                type: object
                            requires_shipping:
                              type: boolean
                            shipping:
                              type: object
                              properties:
                                method:
                                  type: object
                                  properties:
                                    id:
                                      type:
                                        - number
                                        - 'null'
                                    name:
                                      type: string
                                    code:
                                      type: string
                                    estimated_delivery_time:
                                      type:
                                        - string
                                        - 'null'
                                    icon:
                                      type: string
                                    is_system_option:
                                      type: boolean
                                    waybill:
                                      type:
                                        - string
                                        - 'null'
                                    waybill_tracking_id:
                                      type:
                                        - string
                                        - 'null'
                                    tracking:
                                      type: object
                                      properties:
                                        number:
                                          type:
                                            - string
                                            - 'null'
                                        status:
                                          type:
                                            - string
                                            - 'null'
                                        url:
                                          type:
                                            - string
                                            - 'null'
                                    courier:
                                      type:
                                        - string
                                        - 'null'
                                    return_shipment:
                                      type:
                                        - string
                                        - 'null'
                            payment:
                              type: object
                              properties:
                                method:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    code:
                                      type:
                                        - string
                                        - 'null'
                                    type:
                                      type:
                                        - string
                                        - 'null'
                                    transaction_status:
                                      type: string
                                    transaction_status_name:
                                      type: string
                            cod_confirmed:
                              type: boolean
                            reverse_order_label_request:
                              type:
                                - string
                                - 'null'
                  message:
                    type: object
                    properties:
                      type:
                        type: string
                      code:
                        type:
                          - string
                          - 'null'
                      name:
                        type:
                          - string
                          - 'null'
                      description:
                        type:
                          - string
                          - 'null'
                x-examples:
                  Example 1:
                    status: object
                    customer:
                      id: 107
                      name: ريان الفاخري
                      email: rayan.alfakhri@gmail.com
                      mobile: '966544340789'
                      gender: male
                      birth_date: '1987-05-05'
                      verified: true
                      is_active: false
                      is_cod_enabled: true
                      type: individual
                      business_name: null
                      tax_number: null
                      commercial_registration: null
                      city:
                        id: 1
                        national_id: 3
                        name: Riyadh
                        priority: 10
                        country_id: 184
                        country_name: Saudi Arabia
                        country_code: SA
                        ar_name: الرياض
                        en_name: Riyadh
                      nickname: ريان الفاخري
                      pivotEmail: rayan.alfakhri@gmail.com
                      pivotMobile: '966544340789'
                      order_counts: 23
                      total_payments: 15076.72655859143
                      orders_cost_average: 655.5098503735404
                      orders:
                        - id: 5826659
                          code: 6IJWYOYLuR
                          store_id: 3
                          order_url: 'https://zid.store/osama/o/6IJWYOYLuR/inv'
                          store_name: Osama Store 1
                          shipping_method_code: custom
                          store_url: 'https://zid.store/osama/'
                          order_status:
                            name: Delivered
                            code: delivered
                          currency_code: KWD
                          customer:
                            id: 107
                            name: ريان الفاخري
                            verified: 1
                            email: rayan.alfakhri@gmail.com
                            mobile: '966553311169'
                            note: ''
                            type: null
                          has_different_consignee: 0
                          is_guest_customer: 0
                          order_total: '12.22750000000000'
                          order_total_string: 12.228 KWD
                          has_different_transaction_currency: false
                          transaction_reference: null
                          transaction_amount: 151.58173089636205
                          transaction_amount_string: 151.58 SAR
                          issue_date: '01-03-2021 | 10:34 ص'
                          payment_status: paid
                          source: Store
                          source_code: null
                          created_at: '2021-03-01 07:34:11'
                          updated_at: '2021-03-04 11:36:37'
                          tags: []
                          requires_shipping: true
                          shipping:
                            method:
                              id: null
                              name: مندوب
                              code: custom
                              estimated_delivery_time: null
                              icon: 'https://media.zid.store/static/delivery.png'
                              is_system_option: false
                              waybill: null
                              waybill_tracking_id: null
                              tracking:
                                number: null
                                status: null
                                url: null
                              courier: null
                              return_shipment: null
                          payment:
                            method:
                              name: Bank Transfer
                              code: zid_bank_transfer
                              type: zid_bank_transfer
                              transaction_status: new
                              transaction_status_name: New
                          cod_confirmed: false
                          reverse_order_label_request: null
                    message:
                      type: object
                      code: null
                      name: null
                      description: null
              examples:
                Example 1:
                  value:
                    status: object
                    customer:
                      id: 107
                      name: Mohammed Badawi
                      email: mohammed.badawi@gmail.com
                      mobile: '966501234567'
                      gender: male
                      birth_date: '1989-12-31'
                      verified: true
                      is_active: false
                      is_cod_enabled: true
                      type: individual
                      business_name: null
                      tax_number: null
                      commercial_registration: null
                      city:
                        id: 1
                        national_id: 3
                        name: Riyadh
                        priority: 10
                        country_id: 184
                        country_name: Saudi Arabia
                        country_code: SA
                        ar_name: الرياض
                        en_name: Riyadh
                      nickname: Momo Bibi
                      pivotEmail: mohammed.badawi@gmail.com
                      pivotMobile: '966501234567'
                      order_counts: 23
                      total_payments: 15076.72655859143
                      orders_cost_average: 655.5098503735404
                      orders:
                        - id: 5826659
                          code: 6IJWXOYLuR
                          store_id: 3
                          order_url: 'https://zid.store/osama/o/6IJWXOYLuR/inv'
                          store_name: Osama Store 1
                          shipping_method_code: custom
                          store_url: 'https://zid.store/osama/'
                          order_status:
                            name: Delivered
                            code: delivered
                          currency_code: KWD
                          customer:
                            id: 107
                            name: Mohammed Badawi
                            verified: 1
                            email: mohammed.badawi@gmail.com
                            mobile: '966501234567'
                            note: ''
                            type: null
                          has_different_consignee: 0
                          is_guest_customer: 0
                          order_total: '12.22750000000000'
                          order_total_string: 12.228 KWD
                          has_different_transaction_currency: false
                          transaction_reference: null
                          transaction_amount: 151.58173089636205
                          transaction_amount_string: 151.58 SAR
                          issue_date: '01-03-2021 | 10:34 ص'
                          payment_status: paid
                          source: Store
                          source_code: null
                          created_at: '2021-03-01 07:34:11'
                          updated_at: '2021-03-04 11:36:37'
                          tags: []
                          requires_shipping: true
                          shipping:
                            method:
                              id: null
                              name: مندوب
                              code: custom
                              estimated_delivery_time: null
                              icon: 'https://media.zid.store/static/delivery.png'
                              is_system_option: false
                              waybill: null
                              waybill_tracking_id: null
                              tracking:
                                number: null
                                status: null
                                url: null
                              courier: null
                              return_shipment: null
                          payment:
                            method:
                              name: Bank Transfer
                              code: zid_bank_transfer
                              type: zid_bank_transfer
                              transaction_status: new
                              transaction_status_name: New
                          cod_confirmed: false
                          reverse_order_label_request: null
                    message:
                      type: object
                      code: null
                      name: null
                      description: null
        '401':
          $ref: '#/components/responses/401-Unauthorized'
        '404':
          description: Customer Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: object
                    properties:
                      type:
                        type: string
                      code:
                        type:
                          - string
                          - 'null'
                      name:
                        type:
                          - string
                          - 'null'
                      description:
                        type:
                          - string
                          - 'null'
                x-examples:
                  Example 1:
                    status: error
                    message:
                      type: error
                      code: ERROR_POPUP_BACK
                      name: Sorry
                      description: Customer not found
              examples:
                Example 1:
                  value:
                    status: error
                    message:
                      type: error
                      code: ERROR_POPUP_BACK
                      name: Sorry
                      description: Customer not found
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/attributes/{Attribute-Id}/presets/{Preset-Id}':
    delete:
      tags:
        - Product Attribute Presets
      summary: Delete an attribute preset
      description: Delete a defined attribute preset
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
        - name: Preset-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - 794e96c3-227e-4abc-9521-725d147f1e61
      responses:
        '200':
          description: Preset Deleted Successfully
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - Product Attribute Presets
      summary: Update Attribute Preset
      description: update an existing attribute preset using the preset id and attribute id
      parameters:
        - $ref: '#/components/parameters/StoreId'
        - name: Attribute-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - '1'
        - name: Preset-Id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - 794e96c3-227e-4abc-9521-725d147f1e61
      requestBody:
        description: The Request Body that contains the new attribute preset
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: object
                  properties:
                    ar:
                      type: string
                    en:
                      type: string
      responses:
        '200':
          description: Includes the new Attribute Preset Values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-post-presets'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/stores/{store_id}/carts':
    get:
      tags:
        - Carts
      summary: Get cart details
      description: 'Get the cart details including products, customer, total price etc. given the cart session ID.'
      operationId: get-cart
      parameters:
        - $ref: '#/components/parameters/AcceptParam'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/CartSessionId'
        - $ref: '#/components/parameters/Currency'
        - $ref: '#/components/parameters/StoreId_InPath'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/stores/{store_id}/carts/gift-card':
    post:
      tags:
        - Gift Cards
      summary: Add gift card to the cart
      description: Adds a new gift card to the cart.
      operationId: add-gift-card
      parameters:
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AcceptParam'
        - $ref: '#/components/parameters/CartSessionId'
        - $ref: '#/components/parameters/Currency'
        - $ref: '#/components/parameters/StoreId_InPath'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_name:
                  type: string
                  description: Name of the person sending the gift card.
                  examples:
                    - Mohamed Ali
                receiver_name:
                  type: string
                  description: Name of the recipient of the gift card.
                  examples:
                    - Fatima Ahmed
                media_link:
                  type: string
                  description: Link to any media associated with the gift.
                  examples:
                    - 'https://media.example.com/path/to/media'
                gift_message:
                  type: string
                  description: Optional custom message to include with the gift card.
                  examples:
                    - عيد سعيد، يا فاطمة!
                card_design:
                  type: object
                  description: Custom design for the gift card.
                  examples:
                    - file: 'https://media.example.com/path/to/design'
      responses:
        '200':
          description: Gift card added successfully.
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    delete:
      tags:
        - Gift Cards
      summary: Remove gift card from the cart
      description: Removes a gift card from the cart.
      operationId: remove-gift-card
      parameters:
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AcceptParam'
        - $ref: '#/components/parameters/CartSessionId'
        - $ref: '#/components/parameters/Currency'
        - $ref: '#/components/parameters/StoreId_InPath'
      responses:
        '200':
          description: Gift card removed successfully.
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /managers/store/gift-card-upload:
    post:
      tags:
        - Gift Cards
      summary: Upload gift card designs
      description: Upload new designs for gift cards.
      operationId: upload-gift-card-designs
      parameters:
        - $ref: '#/components/parameters/AcceptParam'
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/XManagerToken'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cards:
                  type: array
                  description: Array of design file objects to be uploaded.
                  items:
                    type: object
                    properties:
                      file:
                        type: string
                        description: The local path to the design file to be uploaded.
                        examples:
                          - '/D:/desktop/1pound_Egypt_reverse.jpg'
                        contentMediaType: application/octet-stream
      responses:
        '200':
          description: Design added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    examples:
                      - object
                  payload:
                    type: array
                    description: Array containing the URLs of the successfully uploaded gift card designs.
                    items:
                      type: string
                      examples:
                        - 'https://zid-testing.s3-accelerate.amazonaws.com/public/gift_cards/a65e385b-6a12-4bb9-b347-d1ebddb7c067-WhatsApp%20Image%202023-03-23%20at%2011.50.52.png'
                  message:
                    type: object
                    properties:
                      type:
                        type: string
                        examples:
                          - object
                      code:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /managers/store/coupons/add:
    post:
      tags:
        - Coupons and Bundle Offers
      summary: Create a New Coupon
      description: |
        Create a new coupon with various options such as discount type, validity period, and usage limitations.
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        $ref: '#/components/requestBodies/CouponCreate'
      responses:
        '200':
          description: Coupon successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
  /managers/store/discounts/bundle-offers:
    get:
      tags:
        - Coupons and Bundle Offers
      summary: Retrieve all Bundle Offers
      description: This endpoint retrieves all available bundle offers for the store. Bundle offers are special promotions where customers can get a discount if they buy a specific bundle of products.
      operationId: get-managers-store-discounts-bundle-offers
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/Currency'
        - name: code
          in: query
          description: 'A code to filter the bundle offers. Example: `bundle_offer`.'
          schema:
            type: string
        - name: start_date
          in: query
          description: A date to filter the bundle offers by their start dates. Supports standard comparison operators like `>=`.
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: A date to filter the bundle offers by their end dates.
          schema:
            type: string
            format: date
        - name: order_by
          in: query
          description: 'A field to order the bundle offers by. Example: `start_date`.'
          schema:
            type: string
        - name: sort_by
          in: query
          description: 'A sort direction. Example: `desc`.'
          schema:
            type: string
        - name: page
          in: query
          description: The page number for pagination.
          schema:
            type: integer
        - name: per_page
          in: query
          description: The number of results per page.
          schema:
            type: integer
        - name: search_term
          in: query
          description: A term to search the bundle offers by their names.
          schema:
            type: string
        - name: status
          in: query
          description: 'The status of the bundle offers. The possible values are: `expired`, `disabled`, `unstarted`, `active`.'
          schema:
            type: string
        - name: type
          in: query
          description: The type of bundle offer.
          schema:
            type: string
      responses:
        '200':
          description: Returns a list of all bundle offers for the store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRules'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /managers/store/orders:
    get:
      tags:
        - Orders
      summary: List of Orders
      description: |-
        Orders can be created either by the customers from the storefronts or by the merchants from their dashboard. 
        Use this endpoint to retrieve a list of orders filtered by specific parameters.
      operationId: get-list-of-orders
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: payload_type
          in: query
          description: Added tags to the order
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: page
          in: query
          description: 'pagination, number of page for every call'
          required: true
          style: form
          explode: true
          schema:
            type: number
        - name: per_page
          in: query
          description: number of records for every page with max 100 records
          required: true
          style: form
          explode: true
          schema:
            type: number
        - name: order_status
          in: query
          description: Filter by one of the allowed values
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - new
              - preparing
              - ready
              - indelivery
              - delivered
              - canceled
            examples:
              - new
        - name: payment_method
          in: query
          description: Filter by payment method
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - zid_cod
              - zid_bank_transfer
              - zid_cop
              - zid_credit_card
            examples:
              - zid_cod
        - name: customer_id
          in: query
          description: Enter the customer's id to retrieve only respective orders
          required: false
          style: form
          explode: true
          schema:
            type: number
        - name: date_from
          in: query
          description: 'example: ''2020-01-01T00:00:00.000+0000'''
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: date_to
          in: query
          description: 'example: ''2020-01-01T00:00:00.000+0000'''
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort result in a specific order
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - asc
              - desc
            examples:
              - asc
        - name: shipping_method
          in: query
          schema:
            type: string
            enum:
              - 'supports: zid_delivery.option_{id}'
              - 'zid_pickup.option_{id}'
        - name: order_by
          in: query
          schema:
            const: created_at
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/xml:
            schema:
              type: object
      responses:
        '200':
          description: list of orders (Filtered as per requested parameters)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/store/orders/{order-id}/view':
    get:
      tags:
        - Orders
      summary: Get Order by ID
      description: |
        Get a specific order by its id.
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: order-id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: Single Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The status of the response.
                    examples:
                      - object
                  order:
                    $ref: '#/components/schemas/Order'
                  message:
                    $ref: '#/components/schemas/ResponseMessage'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/delivery-options:
    get:
      tags:
        - Delivery Options
      summary: List of Delivery Option
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: payload_type
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            examples:
              - simple
      responses:
        '200':
          description: List of Delivery Options
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-delivery-options'
              examples:
                Example 1:
                  value:
                    status: object
                    delivery_options:
                      - id: 1
                        name: Custom Shipping Name
                        system_option_code: null
                        select_cities:
                          - id: 1
                            national_id: 3
                            name: الرياض
                            priority: 10
                            country_id: 184
                            country_name: السعودية
                            country_code: SA
                            ar_name: الرياض
                            en_name: Riyadh
                          - id: 71
                            national_id: 18
                            name: جدة
                            priority: 9
                            country_id: 184
                            country_name: السعودية
                            country_code: SA
                            ar_name: جدة
                            en_name: Jeddah
                    system_delivery_options: []
                    message:
                      type: object
                      code: null
                      name: null
                      description: null
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/delivery-options/add:
    post:
      tags:
        - Delivery Options
      summary: Add Shipping Option
      description: To Add Shipping Option To Store
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - name: X-Manager-Token
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
            examples:
              - ''
          examples:
            default:
              value: ''
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the option to be shown to customers
                  examples:
                    - SMSA
                cost:
                  type: string
                  description: cost of the delivery to be shown to customers
                  examples:
                    - '20'
                cod_enabled:
                  type: string
                  description: 1 to enable 0 to disable
                cod_fee:
                  type: string
                  description: COD fee to be shown to customers
                'cities[]':
                  type: string
                  description: The id of the city that enabled in this option  (note that each city should be in a diffrent parameter)
                delivery_estimated_time_ar:
                  type: string
                  description: Arabic delivery description to be shown to cutomers.
                delivery_estimated_time_en:
                  type: string
                  description: English delivery description to be shown to cutomers.
              required:
                - name
                - cost
                - cod_enabled
                - cod_fee
                - 'cities[]'
                - delivery_estimated_time_ar
                - delivery_estimated_time_en
      responses:
        '200':
          description: ok
      security:
        - {}
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/store/payment-methods:
    get:
      tags:
        - Payment Methods
      summary: List of Payment Method
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: List of Payment Options
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-payment-methods'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/countries:
    get:
      tags:
        - Countries and Cities
      summary: Retrieve Store Operating Countries
      description: 'Retrieve a list of countries where the store operates. This list includes the country''s unique ID, name, ISO codes, and flag image URL.'
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: A list of countries is returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    examples:
                      - object
                  countries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Country'
                  message:
                    type: object
                    properties:
                      type:
                        type: string
                        examples:
                          - object
                      code:
                        type:
                          - string
                          - 'null'
                        examples:
                          - null
                      name:
                        type:
                          - string
                          - 'null'
                        examples:
                          - null
                      description:
                        type:
                          - string
                          - 'null'
                        examples:
                          - null
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/managers/cities/by-country-id/{country_id}':
    get:
      tags:
        - Countries and Cities
      summary: Retrieve Cities by Country ID
      description: 'Retrieve a list of cities for a specific country where the store operates or delivers. The list includes each city''s unique ID, name, and country details. Note that a city can be labeled as ''Other'', represented by an ''أخرى'' or ''Other'' in the ''name'' field, which typically signifies a location outside of the predefined list of cities.'
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/CountryId'
      responses:
        '200':
          description: A list of cities is returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    examples:
                      - object
                  cities:
                    type: array
                    items:
                      $ref: '#/components/schemas/City'
                  message:
                    type: object
                    properties:
                      type:
                        type: string
                        examples:
                          - object
                      code:
                        type:
                          - string
                          - 'null'
                        examples:
                          - null
                      name:
                        type:
                          - string
                          - 'null'
                        examples:
                          - null
                      description:
                        type:
                          - string
                          - 'null'
                        examples:
                          - null
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /managers/app-scripts:
    post:
      tags:
        - App Scripts
      summary: Create a new script
      description: 'Utilize this endpoint to create a new script. Investigate the available events [here](../docs/app-scripts.md).'
      operationId: post-managers-app-scripts
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/AcceptParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppScript'
      responses:
        '200':
          description: Successfully created the new script
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppScript'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    get:
      tags:
        - App Scripts
      summary: Retrieve all scripts for a single store
      description: 'This endpoint fetches all scripts for a specific store. Discover the various events available [here](../docs/app-scripts.md).'
      operationId: get-managers-app-scripts
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/AcceptParam'
      responses:
        '200':
          description: Successfully retrieved all scripts for the store
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppScript'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
    put:
      tags:
        - App Scripts
      summary: Update a script
      description: 'Employ this endpoint to update an existing script. Peruse the available events [here](../docs/app-scripts.md).'
      operationId: put-managers-app-scripts
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/AcceptParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppScript'
      responses:
        '200':
          description: Successfully updated the script
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppScript'
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  '/managers/app-scripts/{script_id}':
    delete:
      tags:
        - App Scripts
      summary: Remove a script
      description: 'This endpoint enables the deletion of a specific script, identified by its unique script ID.'
      operationId: delete-managers-app-scripts
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/UserAgent'
        - $ref: '#/components/parameters/AcceptParam'
        - name: script_id
          in: path
          description: The unique identifier (ID) of the script that you wish to delete.
          required: true
          schema:
            type: integer
            examples:
              - 19
      responses:
        '200':
          description: Successfully deleted the script
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
  /managers/webhooks:
    get:
      tags:
        - WebHook
      summary: List of Webhooks
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: List of all webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-get-all-webhooks'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - WebHook
      summary: Create a Webhook
      description: |-
        Webhooks allow you to receive real-time data updates about various events. 
        For certain events, you can specify conditions under which the webhook should trigger, 
        allowing for more targeted data retrieval.

        For more details on available events and their conditions, 
        please refer to the [Supported Webhook Events](../docs/webhooks-overview.md#supported-webhook-events) page.
      operationId: create-a-webhook
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        $ref: '#/components/requestBodies/WebhookCreate'
      responses:
        '200':
          description: Created WebHook Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - WebHook
      summary: Delete a Webhook By Original Id
      description: |
        <ul>
        <li>Send both the original Id and the subscriber params to delete a signal webhook.</li>

        <li>Send only the subscriber param to delete all its webhooks.</li
        </ul>
      parameters:
        - $ref: '#/components/parameters/AuthorizationToken'
        - $ref: '#/components/parameters/XManagerToken'
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: original_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            examples:
              - '1'
        - name: subscriber
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            examples:
              - my app
      responses:
        '200':
          description: WebHook Deleted
      security: []
      servers:
        - url: 'https://api.zid.sa/v1'
          description: Live Server
        - url: 'https://stoplight.io/mocks/zid/zid-merchant-api/41718335'
          description: Mock Server
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
tags:
  - name: Accounts
    description: Operations related to user accounts
  - name: Stores
    description: Endpoints for managing stores.
  - name: Store Settings
    description: Endpoints for managing store settings including enabling Gift Cards.
  - name: Products
    description: 'Endpoints for creating, updating, and managing products.'
  - name: Multi-Inventory
    description: Endpoints for managing inventory locations.
  - name: Inventory Locations
    description: Endpoints for managing inventory locations.
  - name: Product Stock (Multi-Inventory)
    description: Endpoints for managing product stocks.
  - name: Product Categories
    description: 'Endpoints for creating, updating, and managing product-categories.'
  - name: Product Attributes
    description: 'Endpoints for creating, updating, and managing product attributes and their presets.'
  - name: Product Attribute Presets
    description: 'Endpoints for creating, updating, and managing product attribute presets.'
  - name: Product Customizations
    description: 'Endpoints for managing custom user-input fields, custom options fields, and product variants.'
  - name: Product Manual Sorting
    description: Endpoints for managing the manual sorting of products.
  - name: Product Images
    description: Endpoints for managing product images.
  - name: Product Notifications
    description: Endpoints for managing product availability notifications.
  - name: Product Import/Export
    description: Endpoints for importing and exporting products.
  - name: Carts
    description: Endpoints for getting cart details.
  - name: Gift Cards
    description: Endpoints for managing Gift Cards provided at the Store.
  - name: Coupons and Bundle Offers
    description: Endpoints for managing Coupons and Bundle Offers.
  - name: Abandoned Carts
    description: Endpoints for managing abandoned carts.
  - name: Customers
    description: Operations related to Customers
  - name: Orders
    description: Operations related to Orders
  - name: Delivery Options
    description: Endpoints for managing delivery options.
  - name: Payment Methods
    description: Endpoints for managing payment methods.
  - name: Countries and Cities
    description: Endpoints for retrieving countries and cities.
  - name: WebHook
    description: Endpoints for managing webhooks.
  - name: App Scripts
    description: Endpoints for managing app scripts.
components:
  parameters:
    PageSize:
      name: page_size
      in: query
      description: Defines the number of records to return in each page of results. The maximum number of records per page is 100. Default value is `10`.
      required: false
      schema:
        type: string
        examples:
          - '10'
    PageNumber:
      name: page
      in: query
      description: Controls the pagination of results. It indicates the current page number in the paginated list of results. Default value is `1`.
      required: false
      schema:
        type: string
        examples:
          - '5'
    ProductId:
      name: product_id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - 107c2ff5-5c70-4749-b9bd-56dc1793013b
    ProductStockId:
      name: stock_id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LocationId:
      name: location_id
      in: path
      description: The unique identifier of a location.
      required: true
      schema:
        type: string
        examples:
          - loc_123456
      examples:
        default:
          value: loc_123456
    CategoryId:
      name: category_id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - '540'
    StoreId_InPath:
      name: store_id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: number
        examples:
          - 37213
      examples:
        default:
          value: 37213
    CountryId:
      name: country_id
      in: path
      description: Unique identifier of the country
      required: true
      schema:
        type: integer
        examples:
          - 184
    CustomerId:
      name: customer_id
      in: path
      description: ID of the customer to retrieve
      required: true
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - '8737297'
      examples:
        default:
          value: '8737297'
    StoreId:
      name: Store-Id
      in: header
      required: true
      style: simple
      explode: false
      schema:
        type: number
        examples:
          - 37213
    CartSessionId:
      name: Cart-Session-Id
      in: header
      description: A unique identifier for the current cart session.
      required: true
      schema:
        type: string
        format: hash
        examples:
          - 63ac14b3b6d6f883e2be179f6652890f
      examples:
        default:
          value: 63ac14b3b6d6f883e2be179f6652890f
    Currency:
      name: Currency
      in: header
      description: 'The currency in which the data should be returned. This should be provided as an ISO 4217 currency code. For example, SAR for Saudi Riyal, USD for United States Dollar, KWD for Kuwaiti Dinar, etc.'
      required: true
      schema:
        type: string
        examples:
          - SAR
    AcceptLanguage:
      name: Accept-Language
      in: header
      description: Preferred language for the response. Defaults to `en` if not specified.
      required: false
      style: simple
      explode: false
      schema:
        type: string
        enum:
          - en
          - ar
        examples:
          - en
    UserAgent:
      name: User-Agent
      in: header
      description: The User-Agent header contains information about the user agent (browser or app) making the request. It allows the server to provide a tailored response depending on the user agent's capabilities and preferences.
      required: false
      schema:
        type: string
        examples:
          - 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36'
    ContentType:
      name: Content-Type
      in: header
      description: The Media Type of the body of the request. This is used to describe the structure of the data in the body.
      required: true
      schema:
        type: string
        enum:
          - application/json
          - multipart/form-data
          - application/x-www-form-urlencoded
        default: application/json
    AcceptParam:
      name: Accept
      in: header
      description: 'Specifies the Media Types acceptable for the client. In this case, it signals that the client expects a response in the JSON format.'
      required: true
      schema:
        type: string
        default: application/json
    RoleM:
      name: Role
      in: header
      description: Role of the user.
      required: true
      style: simple
      explode: false
      schema:
        const: Manager
        examples:
          - Manager
    RoleMC:
      name: Role
      in: header
      description: Role of the user.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
          - Manager
          - Customer
        examples:
          - Manager
    XManagerToken:
      name: X-Manager-Token
      in: header
      description: This token is used to authenticate and access information related to the store. It is obtained through an OAuth mechanism and is required to perform operations on the store's data. The `X-Manager-Token` should be included in the header of API requests that require store-related information.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - eyJpdiI6Imh3L2dGbmJmRnVCOUY4WW5WQ2s3RFE9PSIsInZhbHVlIjoiZklpRnJyVGV1OWcrZUJBNk44bVp5SjZzSS92V3czcTJjbnJ2dFYvenZ3SFBtWHNSMFU3ZEMzZ0ZJNnpucVE4Ui9rNFdicUduOGpKUlg1VXdGOFFIaVUzZjZyUUZybWx3R0tNY3orUmxoUUUxQ29wSkEyVDZTVnVYb2dlUXJSVzBYVkdESjBpS0xiN05Hbndzc2wzV2N0YitGM1NEdkk4ckZZOTZsTFdEL1ZQRlJJTE5FQmttZng2elpwL1RCeXFRdUd1U3JTc0FHV1kySS80RFJaWlIyZ3gwM2FsQVRFbkt3VWtFOUQyKzdGOD0iLCJtYWMiOiJmZDQ0YzM4ODE0OWQxOWRhYWU0NDhhYmIzYzQ1MDAxMDAzODZjZGM3ZGM4NGJhMGNkMDEyYWZlM2UzYjAxMTI4IiwidGFnIjoiIn0=
      examples:
        default:
          value: eyJpdiI6Imh3L2dGbmJmRnVCOUY4WW5WQ2s3RFE9PSIsInZhbHVlIjoiZklpRnJyVGV1OWcrZUJBNk44bVp5SjZzSS92V3czcTJjbnJ2dFYvenZ3SFBtWHNSMFU3ZEMzZ0ZJNnpucVE4Ui9rNFdicUduOGpKUlg1VXdGOFFIaVUzZjZyUUZybWx3R0tNY3orUmxoUUUxQ29wSkEyVDZTVnVYb2dlUXJSVzBYVkdESjBpS0xiN05Hbndzc2wzV2N0YitGM1NEdkk4ckZZOTZsTFdEL1ZQRlJJTE5FQmttZng2elpwL1RCeXFRdUd1U3JTc0FHV1kySS80RFJaWlIyZ3gwM2FsQVRFbkt3VWtFOUQyKzdGOD0iLCJtYWMiOiJmZDQ0YzM4ODE0OWQxOWRhYWU0NDhhYmIzYzQ1MDAxMDAzODZjZGM3ZGM4NGJhMGNkMDEyYWZlM2UzYjAxMTI4IiwidGFnIjoiIn0=
    AccessToken:
      name: Access-Token
      in: header
      description: 'An Access Token is a unique string that represents the authorization granted to a client (Partner application) by a user (Merchant or Store Manager) to access their protected resources. It is part of the OAuth 2.0 standard and is used to authenticate API requests on behalf of the user. Access Tokens have a limited lifespan and must be used within their validity period. Once expired, a new Access Token can be obtained using a Refresh Token. Access Tokens should be treated as sensitive information and must be kept secure to prevent unauthorized access to the user''s data. If you do not have an `Access-Token`, but have the older alternative instead, i.e., the `X-Manager-Token`, then see the instructions [here](docs/Migrate-to-OAUTH-2.0.md) on how to obtain the `Access-Token`.'
      required: true
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - eyJpdiI6Imh3L2dGbmJmRnVCOUY4WW5WQ2s3RFE9PSIsInZhbHVlIjoiZklpRnJyVGV1OWcrZUJBNk44bVp5SjZzSS92V3czcTJjbnJ2dFYvenZ3SFBtWHNSMFU3ZEMzZ0ZJNnpucVE4Ui9rNFdicUduOGpKUlg1VXdGOFFIaVUzZjZyUUZybWx3R0tNY3orUmxoUUUxQ29wSkEyVDZTVnVYb2dlUXJSVzBYVkdESjBpS0xiN05Hbndzc2wzV2N0YitGM1NEdkk4ckZZOTZsTFdEL1ZQRlJJTE5FQmttZng2elpwL1RCeXFRdUd1U3JTc0FHV1kySS80RFJaWlIyZ3gwM2FsQVRFbkt3VWtFOUQyKzdGOD0iLCJtYWMiOiJmZDQ0YzM4ODE0OWQxOWRhYWU0NDhhYmIzYzQ1MDAxMDAzODZjZGM3ZGM4NGJhMGNkMDEyYWZlM2UzYjAxMTI4IiwidGFnIjoiIn0=
      examples:
        default:
          value: eyJpdiI6Imh3L2dGbmJmRnVCOUY4WW5WQ2s3RFE9PSIsInZhbHVlIjoiZklpRnJyVGV1OWcrZUJBNk44bVp5SjZzSS92V3czcTJjbnJ2dFYvenZ3SFBtWHNSMFU3ZEMzZ0ZJNnpucVE4Ui9rNFdicUduOGpKUlg1VXdGOFFIaVUzZjZyUUZybWx3R0tNY3orUmxoUUUxQ29wSkEyVDZTVnVYb2dlUXJSVzBYVkdESjBpS0xiN05Hbndzc2wzV2N0YitGM1NEdkk4ckZZOTZsTFdEL1ZQRlJJTE5FQmttZng2elpwL1RCeXFRdUd1U3JTc0FHV1kySS80RFJaWlIyZ3gwM2FsQVRFbkt3VWtFOUQyKzdGOD0iLCJtYWMiOiJmZDQ0YzM4ODE0OWQxOWRhYWU0NDhhYmIzYzQ1MDAxMDAzODZjZGM3ZGM4NGJhMGNkMDEyYWZlM2UzYjAxMTI4IiwidGFnIjoiIn0=
    AccessTokenOptional:
      name: Access-Token
      in: header
      description: 'Optional access token. When provided, it represents the authorization granted to a client to access protected resources. Must be used within its validity period.'
      required: false
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - eyJpdiI6Imh3L2dGbmJmRnVCOUY4WW5WQ2s3RFE9PSIsInZhbHVlIjoiZklpRnJyVGV1OWcrZUJBNk44bVp5SjZzSS92V3czcTJjbnJ2dFYvenZ3SFBtWHNSMFU3ZEMzZ0ZJNnpucVE4Ui9rNFdicUduOGpKUlg1VXdGOFFIaVUzZjZyUUZybWx3R0tNY3orUmxoUUUxQ29wSkEyVDZTVnVYb2dlUXJSVzBYVkdESjBpS0xiN05Hbndzc2wzV2N0YitGM1NEdkk4ckZZOTZsTFdEL1ZQRlJJTE5FQmttZng2elpwL1RCeXFRdUd1U3JTc0FHV1kySS80RFJaWlIyZ3gwM2FsQVRFbkt3VWtFOUQyKzdGOD0iLCJtYWMiOiJmZDQ0YzM4ODE0OWQxOWRhYWU0NDhhYmIzYzQ1MDAxMDAzODZjZGM3ZGM4NGJhMGNkMDEyYWZlM2UzYjAxMTI4IiwidGFnIjoiIn0=
      examples:
        default:
          value: eyJpdiI6Imh3L2dGbmJmRnVCOUY4WW5WQ2s3RFE9PSIsInZhbHVlIjoiZklpRnJyVGV1OWcrZUJBNk44bVp5SjZzSS92V3czcTJjbnJ2dFYvenZ3SFBtWHNSMFU3ZEMzZ0ZJNnpucVE4Ui9rNFdicUduOGpKUlg1VXdGOFFIaVUzZjZyUUZybWx3R0tNY3orUmxoUUUxQ29wSkEyVDZTVnVYb2dlUXJSVzBYVkdESjBpS0xiN05Hbndzc2wzV2N0YitGM1NEdkk4ckZZOTZsTFdEL1ZQRlJJTE5FQmttZng2elpwL1RCeXFRdUd1U3JTc0FHV1kySS80RFJaWlIyZ3gwM2FsQVRFbkt3VWtFOUQyKzdGOD0iLCJtYWMiOiJmZDQ0YzM4ODE0OWQxOWRhYWU0NDhhYmIzYzQ1MDAxMDAzODZjZGM3ZGM4NGJhMGNkMDEyYWZlM2UzYjAxMTI4IiwidGFnIjoiIn0=
    AuthorizationToken:
      name: Authorization
      in: header
      description: The Authorization token is a unique key given to the third-party application (Partner) by Zid. It is used to authenticate the API requests made by the Partner application. The token verifies the partner's identity and ensures they have permission to access Zid's API but does not provide any specific user or store information. It should be included in the header of API requests when the partner application needs to access Zid's API.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMTciLCJqdGkiOiJhMTg5ZTg3MmYxMzhkMWVhYjU5MjVkMDkyMGE5NmI0YjliNjg0Y2E2ZTdmM2M2MjljZWYxNmQ4NDJjMmJlYmVhMjI4YTdmMTA0ZWQ4NWE5NCIsImlhdCI6MTY3OTU3Njk5OS41NjY4NzcsIm5iZiI6MTY3OTU3Njk5OS41NjY4OCwiZXhwIjoxNzExMTk5Mzk5LjQ4NjE1Mywic3ViIjoiMTgyNDc1Iiwic2NvcGVzIjpbInRoaXJkLXBhcnRpZXMtYXBpcyJdfQ.i07ef09nVNXGZF-g-QXpNoS2vlFQK_zntAqAMS4Az2XD2EyMLhxLZZRL-QlR11zUPqMmXjMAl_4ooKa3M3zkfZQ6Ga6qStvamk8RnC_39VUx0lfN2A4k65ERZpqwrMy6-t3dE99zay3aicIdNvbgi0zeuMSE5Tn99u-2AtSRa8ffbfAcYPPXacHrhdmlYzdiZS_x_skovFEow1E-nDjdL1WHqO92XdZ7RfNLkiYFTjZlZmM_UruvioaR3q6TXJbqRK_ZrziivezL8ohIQ2SBosUp58I29rlKzvlw_R2j0rKKYZbdxYDaxAHOISmOFKAlO66k7dNevAHI3s4uGIjoGA6ZXHknccWPLLLiaAQ0r64HV8GowW5dg2rhZNurJGDTnLlBQ6F-ql42ptHzSAfzzi576CEoN3gMVpgXcbntUY3reETkFsTBPUjeSuMpANMioXAA0GRp3Ut-84fTnrWxqsCW1WVUIx33HvmfCGPXIdkaCCWoA6G6KXo04MtFbKXQmXkK9esQWI-rqdVnMD3zSR3g3yFHZSL1U-mZeNja03706Rav1ordsRNOtRwtLuoRRbk9KasbUpEwqq4Ao9lqZZwRIjdEw-pQtnUT8V53fhmuuRIefCLFO7eGEtGUnh9o6Uh_pgi6AB6uSlnN9GEMGgI1alqvMmTjxvC-HHt0V-Y
      examples:
        default:
          value: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMTciLCJqdGkiOiJhMTg5ZTg3MmYxMzhkMWVhYjU5MjVkMDkyMGE5NmI0YjliNjg0Y2E2ZTdmM2M2MjljZWYxNmQ4NDJjMmJlYmVhMjI4YTdmMTA0ZWQ4NWE5NCIsImlhdCI6MTY3OTU3Njk5OS41NjY4NzcsIm5iZiI6MTY3OTU3Njk5OS41NjY4OCwiZXhwIjoxNzExMTk5Mzk5LjQ4NjE1Mywic3ViIjoiMTgyNDc1Iiwic2NvcGVzIjpbInRoaXJkLXBhcnRpZXMtYXBpcyJdfQ.i07ef09nVNXGZF-g-QXpNoS2vlFQK_zntAqAMS4Az2XD2EyMLhxLZZRL-QlR11zUPqMmXjMAl_4ooKa3M3zkfZQ6Ga6qStvamk8RnC_39VUx0lfN2A4k65ERZpqwrMy6-t3dE99zay3aicIdNvbgi0zeuMSE5Tn99u-2AtSRa8ffbfAcYPPXacHrhdmlYzdiZS_x_skovFEow1E-nDjdL1WHqO92XdZ7RfNLkiYFTjZlZmM_UruvioaR3q6TXJbqRK_ZrziivezL8ohIQ2SBosUp58I29rlKzvlw_R2j0rKKYZbdxYDaxAHOISmOFKAlO66k7dNevAHI3s4uGIjoGA6ZXHknccWPLLLiaAQ0r64HV8GowW5dg2rhZNurJGDTnLlBQ6F-ql42ptHzSAfzzi576CEoN3gMVpgXcbntUY3reETkFsTBPUjeSuMpANMioXAA0GRp3Ut-84fTnrWxqsCW1WVUIx33HvmfCGPXIdkaCCWoA6G6KXo04MtFbKXQmXkK9esQWI-rqdVnMD3zSR3g3yFHZSL1U-mZeNja03706Rav1ordsRNOtRwtLuoRRbk9KasbUpEwqq4Ao9lqZZwRIjdEw-pQtnUT8V53fhmuuRIefCLFO7eGEtGUnh9o6Uh_pgi6AB6uSlnN9GEMGgI1alqvMmTjxvC-HHt0V-Y
    AuthorizationTokenOptional:
      name: Authorization
      in: header
      description: 'Optional Authorization token. When provided, it authenticates the Partner application''s access to Zid''s API. It doesn''t provide specific user or store information.'
      required: false
      style: simple
      explode: false
      schema:
        type: string
        examples:
          - Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMTciLCJqdGkiOiJhMTg5ZTg3MmYxMzhkMWVhYjU5MjVkMDkyMGE5NmI0YjliNjg0Y2E2ZTdmM2M2MjljZWYxNmQ4NDJjMmJlYmVhMjI4YTdmMTA0ZWQ4NWE5NCIsImlhdCI6MTY3OTU3Njk5OS41NjY4NzcsIm5iZiI6MTY3OTU3Njk5OS41NjY4OCwiZXhwIjoxNzExMTk5Mzk5LjQ4NjE1Mywic3ViIjoiMTgyNDc1Iiwic2NvcGVzIjpbInRoaXJkLXBhcnRpZXMtYXBpcyJdfQ.i07ef09nVNXGZF-g-QXpNoS2vlFQK_zntAqAMS4Az2XD2EyMLhxLZZRL-QlR11zUPqMmXjMAl_4ooKa3M3zkfZQ6Ga6qStvamk8RnC_39VUx0lfN2A4k65ERZpqwrMy6-t3dE99zay3aicIdNvbgi0zeuMSE5Tn99u-2AtSRa8ffbfAcYPPXacHrhdmlYzdiZS_x_skovFEow1E-nDjdL1WHqO92XdZ7RfNLkiYFTjZlZmM_UruvioaR3q6TXJbqRK_ZrziivezL8ohIQ2SBosUp58I29rlKzvlw_R2j0rKKYZbdxYDaxAHOISmOFKAlO66k7dNevAHI3s4uGIjoGA6ZXHknccWPLLLiaAQ0r64HV8GowW5dg2rhZNurJGDTnLlBQ6F-ql42ptHzSAfzzi576CEoN3gMVpgXcbntUY3reETkFsTBPUjeSuMpANMioXAA0GRp3Ut-84fTnrWxqsCW1WVUIx33HvmfCGPXIdkaCCWoA6G6KXo04MtFbKXQmXkK9esQWI-rqdVnMD3zSR3g3yFHZSL1U-mZeNja03706Rav1ordsRNOtRwtLuoRRbk9KasbUpEwqq4Ao9lqZZwRIjdEw-pQtnUT8V53fhmuuRIefCLFO7eGEtGUnh9o6Uh_pgi6AB6uSlnN9GEMGgI1alqvMmTjxvC-HHt0V-Y
      examples:
        default:
          value: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMTciLCJqdGkiOiJhMTg5ZTg3MmYxMzhkMWVhYjU5MjVkMDkyMGE5NmI0YjliNjg0Y2E2ZTdmM2M2MjljZWYxNmQ4NDJjMmJlYmVhMjI4YTdmMTA0ZWQ4NWE5NCIsImlhdCI6MTY3OTU3Njk5OS41NjY4NzcsIm5iZiI6MTY3OTU3Njk5OS41NjY4OCwiZXhwIjoxNzExMTk5Mzk5LjQ4NjE1Mywic3ViIjoiMTgyNDc1Iiwic2NvcGVzIjpbInRoaXJkLXBhcnRpZXMtYXBpcyJdfQ.i07ef09nVNXGZF-g-QXpNoS2vlFQK_zntAqAMS4Az2XD2EyMLhxLZZRL-QlR11zUPqMmXjMAl_4ooKa3M3zkfZQ6Ga6qStvamk8RnC_39VUx0lfN2A4k65ERZpqwrMy6-t3dE99zay3aicIdNvbgi0zeuMSE5Tn99u-2AtSRa8ffbfAcYPPXacHrhdmlYzdiZS_x_skovFEow1E-nDjdL1WHqO92XdZ7RfNLkiYFTjZlZmM_UruvioaR3q6TXJbqRK_ZrziivezL8ohIQ2SBosUp58I29rlKzvlw_R2j0rKKYZbdxYDaxAHOISmOFKAlO66k7dNevAHI3s4uGIjoGA6ZXHknccWPLLLiaAQ0r64HV8GowW5dg2rhZNurJGDTnLlBQ6F-ql42ptHzSAfzzi576CEoN3gMVpgXcbntUY3reETkFsTBPUjeSuMpANMioXAA0GRp3Ut-84fTnrWxqsCW1WVUIx33HvmfCGPXIdkaCCWoA6G6KXo04MtFbKXQmXkK9esQWI-rqdVnMD3zSR3g3yFHZSL1U-mZeNja03706Rav1ordsRNOtRwtLuoRRbk9KasbUpEwqq4Ao9lqZZwRIjdEw-pQtnUT8V53fhmuuRIefCLFO7eGEtGUnh9o6Uh_pgi6AB6uSlnN9GEMGgI1alqvMmTjxvC-HHt0V-Y
  requestBodies:
    LocationCreate:
      description: The request body object for creating a new inventory location
      required: true
      content:
        application/json:
          schema:
            type: object
            description: The details necessary for creating a new inventory location
            properties:
              name:
                type: object
                description: The name of the inventory location in both Arabic and English languages
                properties:
                  ar:
                    type: string
                    description: The Arabic name of the inventory location
                    examples:
                      - مخزن الرياض
                  en:
                    type: string
                    description: The English name of the inventory location
                    examples:
                      - Riyadh warehouse
                required:
                  - ar
                  - en
              coordinates:
                type: object
                description: The geographic coordinates of the inventory location
                properties:
                  longitude:
                    type: number
                    description: The longitude coordinate of the inventory location
                    examples:
                      - 24.876855429417
                  latitude:
                    type: number
                    description: The latitude coordinate of the inventory location
                    examples:
                      - 50.0887943
                required:
                  - longitude
                  - latitude
              full_address:
                type: string
                description: The full physical address of the inventory location
                examples:
                  - 'RHHB4094, 4094 Al Aflaj, 7377، حي الواحة، Riyadh 12442, Saudi Arabia'
              city:
                type: integer
                description: |
                  The unique identifier of the city where the new inventory location is based. If you don't know the ID of the city, you can find it by making two API calls in the following order:

                  1. [`/managers/countries`](../reference/merchant-api.yaml/paths/~1managers~1countries/get): This endpoint provides a list of countries, each with a unique ID. Find the ID of the country where your new inventory is located.

                  2. [`/managers/cities/by-country-id/{country_id}`](../reference/merchant-api.yaml/paths/~1managers~1cities~1by-country-id~1{country_id}/get): Replace `{country_id}` with the ID obtained from the first step. This endpoint returns a list of cities in the given country, each with its own unique ID. Find the ID of the city where your new inventory is located.

                  Use this city ID here to add a new inventory location.
                examples:
                  - 236
              is_default:
                type: boolean
                description: A flag indicating whether this inventory location is the default one for the store
                examples:
                  - true
              is_private:
                type: boolean
                description: A flag indicating whether this inventory location is private and not accessible to the public
                examples:
                  - false
              is_enabled:
                type: boolean
                description: A flag indicating whether this inventory location is currently enabled and functioning
                examples:
                  - true
            required:
              - name
              - coordinates
              - full_address
              - city
              - is_default
              - is_private
              - is_enabled
    ProductCreate:
      description: 'Request Body for creating a new product, including variants.'
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: object
                description: Name of the product in multiple languages.
                properties:
                  ar:
                    type: string
                    examples:
                      - منتج جديد
                  en:
                    type: string
                    examples:
                      - New Product
              price:
                type: string
                description: Base price of the product.
                examples:
                  - '140'
              is_published:
                type: boolean
                description: Indicates whether the product is published or not.
                examples:
                  - true
              variants:
                type: array
                description: List of product variants.
                items:
                  type: object
                  properties:
                    price:
                      type: number
                      description: Price of the variant.
                      examples:
                        - 6000
                    sale_price:
                      type:
                        - number
                        - 'null'
                      description: 'Sale price of the variant, if applicable.'
                      examples:
                        - 5500
                    images:
                      type: array
                      description: Array of image URLs for the variant.
                      examples:
                        - - image1.jpg
                          - image2.jpg
                      items:
                        type: string
                    quantity:
                      type: integer
                      description: Quantity of the variant available.
                      examples:
                        - 100
                    is_infinite:
                      type: boolean
                      description: Flag to indicate if the variant has infinite stock.
                      examples:
                        - false
                    weight:
                      type: object
                      description: Weight of the variant.
                      properties:
                        value:
                          type:
                            - number
                            - 'null'
                          examples:
                            - 1.5
                        unit:
                          type: string
                          examples:
                            - kg
                    stocks:
                      type: array
                      description: 'Additional stock information for the variant. For more information, refer to the [ProductStocks schema](../reference/merchant-api.yaml/components/schemas/ProductStocks).'
                    attributes:
                      type: array
                      description: 'The `attributes` array is a key field that defines the unique characteristics of each product variant. For a comprehensive understanding of how to use this field, please refer to the [Product Options Documentation](../docs/product-attributes-options-variants.md).'
                      items:
                        type: object
                        properties:
                          slug:
                            type: string
                            examples:
                              - size
                          value:
                            type: object
                            properties:
                              ar:
                                type: string
                                examples:
                                  - صغير
                              en:
                                type: string
                                examples:
                                  - Small
            required:
              - name
              - price
    ProductStockCreate:
      description: Request Body for creating a new product stock.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              location:
                type: string
                description: ID of the location.
                examples:
                  - b174040e-bcc6-47f4-9228-e5e5caa49736
              available_quantity:
                type: integer
                description: Available quantity of the product in this location.
                examples:
                  - 15
              is_infinite:
                type: boolean
                description: Whether the product quantity is infinite or not.
                examples:
                  - false
            required:
              - location
              - available_quantity
              - is_infinite
    ProductStockUpdate:
      description: Request Body for updating a product stock.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              available_quantity:
                type:
                  - integer
                  - 'null'
                description: Available quantity of the product. Set to null for infinite quantity.
                examples:
                  - null
              is_infinite:
                type: boolean
                description: Whether the product quantity is infinite or not.
                examples:
                  - true
            required:
              - available_quantity
              - is_infinite
    CouponCreate:
      description: Request Body for creating a coupon.
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the coupon for the merchant's own reference. This name will appear on the merchant dashboard and is not visible to the customer.
                examples:
                  - Summer Sale - July 2023
              code:
                type: string
                description: The unique code for the coupon.
                examples:
                  - SUMMER2023
              discount_type:
                type: string
                enum:
                  - f
                  - p
                description: The type of discount to be applied. Use 'f' for a fixed amount and 'p' for a percentage.
                examples:
                  - p
              discount:
                type: string
                description: The value of the discount.
                examples:
                  - 20
              free_shipping:
                type: string
                description: '`1` to enable free shipping, `0` to disable it.'
                examples:
                  - 1
              free_cod:
                type: string
                description: '`1` to enable free Cash On Delivery (COD), `0` to disable it.'
                examples:
                  - 0
              total:
                type: string
                description: 'The minimum total amount of items in the cart, before shipping, VAT, and other fees, required to apply the coupon. The currency considered is the store''s default currency.'
                examples:
                  - 100
              date_start:
                type: string
                description: The start date for the coupon validity.
                examples:
                  - '2023-07-01'
              date_end:
                type: string
                description: The end date for the coupon validity.
                examples:
                  - '2023-07-31'
              uses_total:
                type: integer
                description: The maximum number of times the coupon can be used.
                examples:
                  - 100
              uses_customer:
                type: integer
                description: The maximum number of times a single customer can use the coupon.
                examples:
                  - 3
              apply_to:
                type: string
                enum:
                  - all
                  - non_discounted_products
                  - discounted_products
                  - products
                  - categories
                  - excluded_products
                description: Specifies where the coupon can be applied.
                examples:
                  - all
              apply_to_array:
                type: array
                description: |
                  An array of product UIDs or category IDs on which the coupon will be applied. This field is relevant only if `apply_to` is set to `products`, `categories`, or `excluded_products`. 
                  - When `apply_to` is set to `products` or `categories`, the coupon will apply only to the items or categories specified in this array.
                  - When `apply_to` is set to `excluded_products`, the coupon will apply to all items except those specified in this array.
                examples:
                  - - UID1
                    - UID2
                items:
                  type: string
              status:
                type: string
                description: '`1` to activate the coupon, `0` to deactivate it.'
                examples:
                  - 1
            required:
              - name
              - code
              - discount_type
              - discount
              - free_shipping
              - free_cod
              - total
              - date_start
              - date_end
              - uses_total
              - uses_customer
              - apply_to
              - status
    WebhookCreate:
      description: |
        This request body contains the details of the webhook subscription. 
        Provide the necessary information to create a new webhook subscription.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                description: |
                  The event that the webhook will subscribe to. It represents the type of event that will trigger the webhook.
                examples:
                  - order.status.update
              target_url:
                type: string
                description: |
                  The URL to which Zid will send a payload when the subscribed event triggers. This is the endpoint that will receive the webhook data.
                examples:
                  - 'http://zid.sa'
              original_id:
                type: integer
                description: |
                  An optional user-defined identifier for reference purposes. The original ID allows the user (Partner) to associate their own identifier with the webhook subscription.
                examples:
                  - 1
              subscriber:
                type: string
                description: |
                  The name or identifier of the subscriber. It indicates the source or owner of the webhook subscription.
                examples:
                  - My App
              conditions:
                type:
                  - object
                  - 'null'
                description: |
                  Additional conditions that can be specified for the webhook subscription. 
                  This field allows filtering the webhook events based on specific criteria. 
                  For example, you may want to be notified **only** when an order's status is 'delivered' 
                  or if the payment method is 'Cash On Delivery'.

                  **Supported Events: `order.create` and `order.status.update`**

                  | Key | Type | Description |
                  | --- | ---- | ----------- |
                  | delivery_option_id | integer | The delivery option ID in Zid. |
                  | status | string | One of these statuses: [new, preparing, ready, inDelivery, delivered, cancelled]. |
                  | payment_method | string | One of these methods: [Cash On Delivery, Credit Card, Bank Transfer].  
                properties:
                  status:
                    type: string
                    enum:
                      - new
                      - preparing
                      - ready
                      - inDelivery
                      - delivered
                      - cancelled
                    description: The order status. Optional.
                  delivery_option_id:
                    type: integer
                    description: The delivery option ID in Zid. Optional.
                  payment_method:
                    type: string
                    enum:
                      - Cash On Delivery
                      - Credit Card
                      - Bank Transfer
                    description: The payment method. Optional.
                examples:
                  - '{"delivery_option_id":"55", "payment_method":"Cash On Delivery"}'
            required:
              - event
              - target_url
              - original_id
              - subscriber
  securitySchemes:
    access_token:
      type: oauth2
      description: |-
        The Zid Merchant API uses OAuth 2.0 for authorization, enabling third-party apps (clients) to access specific resources without sharing resource owner credentials. The process involves several steps:

        1. The client app redirects the merchant to Zid's OAuth server for authorization.
        2. The merchant logs in, authenticates, and approves the requested permissions (scopes).
        3. The OAuth server sends an authorization code to the client app.
        4. The client app exchanges the authorization code for an `access_token` and a `refresh_token`.

        Access tokens are used to access the API, while refresh tokens are used to obtain new access tokens once the current ones expire. This flow involves four major actors: Resource owner (merchant), Client (3rd party app), OAuth server, and Resource server.

        For a more detailed technical perspective and sample code, visit [Zid's OAuth 2.0 documentation](https://docs.zid.sa/docs/authorization-migration/2cgihlrgqoz36-authorization).
      flows:
        authorizationCode:
          refreshUrl: 'https://api.zid.sa/oauth/token'
          authorizationUrl: 'https://api.zid.sa/oauth/authorize'
          scopes: {}
          tokenUrl: 'https://api.zid.sa/oauth/token'
  responses:
    200-CategoryDisocciatedFromAllProducts:
      description: The operation was successful. The category has been removed from all products.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                examples:
                  - object
              category:
                $ref: '#/components/schemas/ProductCategory'
              message:
                type: object
                properties:
                  type:
                    type: string
                    examples:
                      - object
                  code:
                    type:
                      - string
                      - 'null'
                    examples:
                      - null
                  name:
                    type:
                      - string
                      - 'null'
                    examples:
                      - null
                  description:
                    type:
                      - string
                      - 'null'
                    examples:
                      - null
    400-BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: object
                properties:
                  type:
                    type: string
                  code:
                    type:
                      - string
                      - 'null'
                  name:
                    type:
                      - string
                      - 'null'
                  description:
                    type:
                      - string
                      - 'null'
            examples:
              - status: error
                message:
                  type: error
                  code: INVALID_REQUEST
                  name: Bad Request
                  description: The request is invalid or malformed.
          examples:
            default:
              value:
                status: error
                message:
                  type: error
                  code: INVALID_REQUEST
                  name: Bad Request
                  description: The request is invalid or malformed.
    401-Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: object
                properties:
                  type:
                    type: string
                  code:
                    type:
                      - string
                      - 'null'
                  name:
                    type:
                      - string
                      - 'null'
                  description:
                    type:
                      - string
                      - 'null'
          examples:
            Example 1:
              value:
                status: error
                message:
                  type: error
                  code: null
                  name: null
                  description: Unauthenticated
            Example 2:
              value:
                status: error
                message:
                  type: error
                  code: ERROR_SESSION_INVALID
                  name: Sorry
                  description: Invalid Authorization token(s).
            Example 3:
              value:
                status: error
                message:
                  type: error
                  code: ERROR_SESSION_INVALID
                  name: عذراً
                  description: عملية التوثيق غير صحيحة
    403-Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: object
                properties:
                  type:
                    type: string
                  code:
                    type:
                      - string
                      - 'null'
                  name:
                    type:
                      - string
                      - 'null'
                  description:
                    type:
                      - string
                      - 'null'
            examples:
              - status: error
                message:
                  type: error
                  code: FORBIDDEN
                  name: Forbidden
                  description: You do not have the required permissions to access this resource.
          examples:
            default:
              value:
                status: error
                message:
                  type: error
                  code: FORBIDDEN
                  name: Forbidden
                  description: You do not have the required permissions to access this resource.
    404-NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: object
                properties:
                  type:
                    type: string
                  code:
                    type:
                      - string
                      - 'null'
                  name:
                    type:
                      - string
                      - 'null'
                  description:
                    type:
                      - string
                      - 'null'
            examples:
              - status: error
                message:
                  type: error
                  code: NOT_FOUND
                  name: Not Found
                  description: The requested resource could not be found.
          examples:
            default:
              value:
                status: error
                message:
                  type: error
                  code: NOT_FOUND
                  name: Not Found
                  description: The requested resource could not be found.
  schemas:
    UserProfile_StoreManager:
      type: object
      description: The user profile of a store manager.
      properties:
        id:
          type: integer
          description: The unique identifier of the manager.
          examples:
            - 123456
        old_id:
          type:
            - integer
            - 'null'
          description: 'The previous unique identifier of the manager, if any.'
          examples:
            - 123455
        uuid:
          type: string
          description: The unique universally unique identifier (UUID) of the manager.
          examples:
            - a1b2c3f4-5d6e-7f8g-9h10-i11j12k13l14
        name:
          type: string
          description: The full name of the manager.
          examples:
            - Abdulaziz Al-Omari
        username:
          type: string
          description: 'The manager''s username, usually an email address.'
          examples:
            - abdulaziz.zid@gmail.com
        email:
          type: string
          description: The manager's email address.
          examples:
            - abdulaziz.zid@gmail.com
        is_email_verified:
          type: boolean
          description: 'Indicates if the manager''s email is verified. True if it is, otherwise false.'
          examples:
            - true
        mobile:
          type: string
          description: 'The manager''s mobile number, including the country code.'
          examples:
            - '+966534648164'
        mobile_object:
          $ref: '#/components/schemas/StoreMobileObject'
        gender:
          type: string
          description: 'The gender of the manager. ''m'' for male, ''f'' for female.'
          examples:
            - m
        intercom_user_hash:
          type: string
          description: The unique hash of the user in Intercom for customer communication and support.
          examples:
            - a2f3b38ebe8a6a92d20967986c8b1e31e2926386235c60682a2c5dbb57910712
        vloops_ref_code:
          type:
            - string
            - 'null'
          description: 'The reference code of the manager in VLoops, if applicable.'
          examples:
            - null
        user_profile_data:
          $ref: '#/components/schemas/UserProfileData'
        business_location:
          $ref: '#/components/schemas/BusinessLocation'
        roles:
          type: array
          description: 'An array of the roles assigned to the manager. Each item in the array is an object that includes the unique ID, slug, and name of the role.'
          examples:
            - - id: 9b91f2fe-a7c6-4791-8e3d-b6f860f452eb
                slug: store.owner
                name: Store Owner
        permissions:
          type: array
          description: An array of permissions assigned to the manager. Each permission is an object and includes the details of a specific permission.
          examples:
            - - id: abcd1234-ef56-gh78-ijkl9012
                slug: manage.products
                name: Manage Products
              - id: mnop3456-qr78-st90-uvwx2468
                slug: manage.orders
                name: Manage Orders
          items:
            $ref: '#/components/schemas/Permission'
        store:
          $ref: '#/components/schemas/Store'
        created_at:
          type: string
          description: 'The timestamp when the manager''s profile was created, in YYYY-MM-DD HH:MM:SS format.'
          examples:
            - '2023-05-22 11:35:24'
        tap_public_key:
          type: string
          description: The manager's public key in TAP Payments for secure payment processing.
          examples:
            - pk_live_BbpEVT0tZCXrndWqFOQeI5jY
    StoreMobileObject:
      type: object
      description: The mobile number information of the store.
    UserProfileData:
      type: object
      description: Contains additional data related to the user's personal and professional details.
      properties:
        birth_date:
          type:
            - string
            - 'null'
          description: The birth date of the user.
          format: date
          examples:
            - '1992-08-14'
        country_id:
          type: integer
          description: The ID of the country where the user resides.
          examples:
            - 114
        city_id:
          type: integer
          description: The ID of the city where the user resides.
          examples:
            - 1107
        city:
          $ref: '#/components/schemas/City'
        country:
          $ref: '#/components/schemas/Country'
        is_organization_employee:
          type: boolean
          description: 'Indicates if the user is an employee of the organization. True if yes, otherwise false.'
          examples:
            - true
        working_organization_name:
          type:
            - string
            - 'null'
          description: 'The name of the organization where the user works. If the user isn''t an employee of an organization, this is null.'
          examples:
            - Zid Business Solutions
        job_title:
          type:
            - string
            - 'null'
          description: 'The job title of the user within the organization. If the user isn''t an employee of an organization, this is null.'
          examples:
            - Store Manager
    City:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the city
          examples:
            - 1
        national_id:
          type:
            - integer
            - 'null'
          description: National identifier of the city.
          examples:
            - 3
        name:
          type: string
          description: 'Name of the city, written in the language specified by the _Accept-Language_ header parameter; defaults to Arabic if _Accept-Language_ is not specified.'
          examples:
            - الرياض
        priority:
          type: integer
          description: Priority of the city. Higher number indicates higher priority.
          examples:
            - 10
        country_id:
          type: integer
          description: Unique identifier of the country the city is located in
          examples:
            - 184
        country_name:
          type: string
          description: Name of the country the city is located in (in Arabic)
          examples:
            - السعودية
        country_code:
          type: string
          description: Two-letter country code according to ISO 3166-1 alpha-2
          examples:
            - SA
        ar_name:
          type: string
          description: Name of the city in Arabic
          examples:
            - الرياض
        en_name:
          type: string
          description: Name of the city in English
          examples:
            - Riyadh
      required:
        - id
        - name
    Country:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the country
          examples:
            - 184
        name:
          type: string
          description: 'Name of the country, written in the language specified by the _Accept-Language_ header parameter; defaults to Arabic if _Accept-Language_ is not specified.'
          examples:
            - السعودية
        code:
          type: string
          description: Two-letter country code according to ISO 3166-1 alpha-2
          examples:
            - SA
        country_code:
          type: string
          description: Three-letter country code according to ISO 3166-1 alpha-3
          examples:
            - SAU
        flag:
          type: string
          description: URL to the country's flag image
          examples:
            - 'https://media.zid.store/static/sa.svg'
      required:
        - id
        - name
    BusinessLocation:
      type: object
      description: Contains the business location details of the user.
      properties:
        country:
          type:
            - string
            - 'null'
          description: The country where the business is located.
          examples:
            - Saudi Arabia
        city:
          type:
            - string
            - 'null'
          description: The city where the business is located.
          examples:
            - Riyadh
        district:
          type:
            - string
            - 'null'
          description: The district where the business is located.
          examples:
            - Al-Olaya
        street:
          type:
            - string
            - 'null'
          description: The street where the business is located.
          examples:
            - King Fahd Road
        building_no:
          type:
            - string
            - 'null'
          description: The building number where the business is located.
          examples:
            - '1010'
        postal_code:
          type:
            - string
            - 'null'
          description: The postal code of the business location.
          examples:
            - '12214'
        additional_postal_code:
          type:
            - string
            - 'null'
          description: Any additional postal code related to the business location.
          examples:
            - '3765'
        lat:
          type:
            - number
            - 'null'
          description: The latitude of the business location.
          format: float
          examples:
            - 24.7136
        lng:
          type:
            - number
            - 'null'
          description: The longitude of the business location.
          format: float
          examples:
            - 46.6753
        show_location:
          type: boolean
          description: 'Indicates if the business location should be displayed. True if it should be displayed, otherwise false.'
          examples:
            - false
    Permission:
      type: object
      description: Represents a single permission granted to a manager in the system. Permissions govern the actions that a manager can perform.
      properties:
        id:
          type: string
          description: 'A unique identifier associated with each permission, typically in the form of a UUID.'
          examples:
            - 100f28ef-1c58-45cc-9bfd-feaf6bb64b1b
        slug:
          type: string
          description: A URL-friendly identifier that signifies the action or access level of the permission. Slugs are typically lowercase with words separated by periods (.) and provide a human-readable way to describe the permission in system logic.
          examples:
            - manage.store.marketing
        name:
          type: string
          description: A user-friendly name for the permission. This is often displayed in user interfaces to help users understand the purpose of the permission.
          examples:
            - Marketing
        description:
          type: string
          description: A brief explanation of what actions or access this permission grants to the manager. This helps in understanding the context of use for this permission.
          examples:
            - 'Manage store marketing settings, accessible from the **Home -> Marketing** menu.'
        order:
          type: integer
          description: 'The precedence value for the permission. Higher values indicate a higher level of priority. Multiple permissions can have the same order value, reflecting equal precedence.'
          examples:
            - 1
    Store:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the store.
          examples:
            - 251073
        uuid:
          type: string
          description: Universally unique identifier of the store.
          examples:
            - 4cbeba83-6ded-431b-a1ee-16ebfdbb8924
        username:
          type: string
          description: 'The username associated with the store, typically the manager''s name followed by "store".'
          examples:
            - Abdullah Ahmed's store
        title:
          type: string
          description: The official name of the store.
          examples:
            - Golden Oasis Electronics
        phone:
          type: string
          description: The contact phone number of the store.
          examples:
            - '+966550427322'
        mobile_object:
          $ref: '#/components/schemas/StoreMobileObject'
        store_business_data:
          type: object
          description: Detailed business-related data associated with the store.
          properties:
            civil_id:
              type: integer
              description: The civil identification number of the store or business owner.
              examples:
                - 123456789
            business_place_status:
              type: string
              description: 'The status of the business place, e.g., rented, owned.'
              examples:
                - rented
            has_branches:
              type: boolean
              description: Indicates whether the store has multiple branches.
              examples:
                - true
            branch_no:
              type: integer
              description: 'The branch number of this store, if applicable.'
              examples:
                - 3
            business_type:
              type: string
              description: The type or category of the business.
              examples:
                - electronics
            business_corporate_name:
              type: string
              description: The corporate name of the business.
              examples:
                - ElectroHub Corp.
            employee_no:
              type: integer
              description: The number of employees working in the store or business.
              examples:
                - 50
            email:
              type: string
              description: The official email address of the store or business.
              examples:
                - info@electrohub.com
            commercial_name:
              type: string
              description: The commercial name under which the store operates.
              examples:
                - ElectroHub
            is_maroof_checked:
              type: boolean
              description: Indicates whether the store has been checked or verified by Maroof.
              examples:
                - true
            is_freelance_checked:
              type: boolean
              description: Indicates whether the store operates on a freelance basis and has been checked accordingly.
              examples:
                - false
            maroof_number:
              type: integer
              description: 'The verification number provided by Maroof, if applicable.'
              examples:
                - 987654
        commercial_registration_number:
          type:
            - string
            - 'null'
          description: The commercial registration number of the store.
          examples:
            - '1029384756'
        commercial_registration_number_activation:
          type:
            - boolean
            - 'null'
          description: Whether the commercial registration number is activated.
          examples:
            - true
        email:
          type: string
          description: The email address associated with the store.
          examples:
            - abdullah.store@zid.sa
        url:
          type: string
          description: The URL of the store's website.
          examples:
            - 'https://abdullahstore.zid.store/'
        ssl:
          type: string
          description: The SSL-enabled URL of the store's website.
          examples:
            - 'https://abdullahstore.zid.store/'
        sitemap_url:
          type: string
          description: The URL of the store's sitemap.
          examples:
            - 'https://abdullahstore.zid.store/sitemap.xml'
        currency:
          $ref: '#/components/schemas/StoreCurrency'
        currencies:
          type: array
          description: List of currencies supported by the store. This includes all currencies that the store can do transactions in.
          items:
            $ref: '#/components/schemas/StoreCurrency'
        language:
          $ref: '#/components/schemas/StoreLanguage'
        languages:
          type: array
          description: List of languages supported by the store. This includes all languages that the store's website can be displayed in.
          items:
            $ref: '#/components/schemas/StoreLanguage'
        theme:
          $ref: '#/components/schemas/StoreTheme'
        logo:
          type:
            - string
            - 'null'
          description: The URL of the store's logo.
          examples:
            - 'https://media.zid.store/abdullahstore/logo.png'
        logos:
          type: array
          description: An array of URLs of different versions of the store's logo. Empty array if the store doesn't have a logo.
          examples:
            - []
        cover:
          type:
            - string
            - 'null'
          description: The URL of the store's cover image.
          examples:
            - 'https://media.zid.store/abdullahstore/cover.jpg'
        icon:
          type:
            - string
            - 'null'
          description: The URL of the store's icon.
          examples:
            - 'https://media.zid.store/abdullahstore/icon.png'
        maintenance_mode:
          type: boolean
          description: 'Indicates if the store is in maintenance mode. True if in maintenance mode, otherwise false.'
          examples:
            - false
        has_new_products_service:
          type: boolean
          description: 'Indicates if the store has a new products service. True if it does, otherwise false.'
          examples:
            - true
        facebook:
          type:
            - string
            - 'null'
          description: The URL of the store's Facebook page.
          examples:
            - 'https://www.facebook.com/abdullahstore'
        twitter:
          type:
            - string
            - 'null'
          description: The URL of the store's Twitter profile.
          examples:
            - 'https://twitter.com/abdullahstore'
        instagram:
          type:
            - string
            - 'null'
          description: The URL of the store's Instagram profile.
          examples:
            - 'https://instagram.com/abdullahstore'
        snapchat:
          type:
            - string
            - 'null'
          description: The username of the store's Snapchat account.
          examples:
            - abdullahstore
        tiktok:
          type:
            - string
            - 'null'
          description: The username of the store's TikTok account.
          examples:
            - abdullahstore
        maroof:
          type:
            - string
            - 'null'
          description: The URL of the store's Maroof page.
          examples:
            - 'https://maroof.sa/abdullahstore'
        website:
          type:
            - string
            - 'null'
          description: The URL of the store's official website. `Null` if the store doesn't have an official website apart from the Zid store.
          examples:
            - 'https://www.abdullahstore.sa'
        one_signal_keys:
          type: array
          description: Array of OneSignal keys used for push notifications.
          examples:
            - []
        sms_campaigns_balance:
          type: integer
          description: The current balance of SMS campaigns.
          examples:
            - 100
        sms_campaigns_sender_name:
          $ref: '#/components/schemas/StoreSMSSenderName'
        acquisition_program:
          type:
            - string
            - 'null'
          description: Information about the store's customer acquisition program.
          examples:
            - Referral program
        registration_discount_code:
          type:
            - string
            - 'null'
          description: The discount code provided to new users upon registration.
          examples:
            - WELCOME10
        industry:
          $ref: '#/components/schemas/StoreIndustry'
        category:
          $ref: '#/components/schemas/ProductCategory'
        category_other:
          type:
            - string
            - 'null'
          description: 'Additional category information, if the store doesn''t fit neatly into one category.'
          examples:
            - Gourmet Foods
        show_store_selected_category_notification:
          type: boolean
          description: 'If set to true, a notification will be shown when the store category is selected.'
          examples:
            - false
        malls:
          type: array
          description: An array of malls where the store's products are available.
          examples:
            - []
        is_customers_email_mandatory:
          type: boolean
          description: Indicates if customers are required to provide their email during checkout.
          examples:
            - false
        customers_login_by_email_status:
          type:
            - boolean
            - 'null'
          description: 'Indicates if customers can log in using their email. True if enabled, otherwise false.'
          examples:
            - true
        is_gmaps_and_spl_in_address_enabled:
          type:
            - boolean
            - 'null'
          description: Indicates if Google Maps and SPL are enabled in the address input.
          examples:
            - true
        is_gmaps_in_address_enabled:
          type:
            - boolean
            - 'null'
          description: Indicates if Google Maps is enabled in the address input.
          examples:
            - false
        is_gmaps_in_address_mandatory:
          type:
            - boolean
            - 'null'
          description: Indicates if providing an address via Google Maps is mandatory.
          examples:
            - false
        is_spl_in_address_enabled:
          type:
            - boolean
            - 'null'
          description: Indicates if SPL is enabled in the address input.
          examples:
            - false
        is_restock_cancelled_orders_enabled:
          type:
            - boolean
            - 'null'
          description: Indicates if restocking of cancelled orders is enabled.
          examples:
            - true
        is_low_stock_label_enabled:
          type:
            - boolean
            - 'null'
          description: Indicates if a label for low stock is enabled.
          examples:
            - false
        is_product_reviews_enabled:
          type:
            - boolean
            - 'null'
          description: Indicates if product reviews are enabled.
          examples:
            - false
        low_stock_quantity_limit:
          type:
            - integer
            - 'null'
          description: Defines the quantity limit that triggers the low stock label.
          examples:
            - 10
        is_different_consignee_allowed:
          type:
            - boolean
            - 'null'
          description: Indicates if a different consignee (receiver) is allowed for the orders.
          examples:
            - false
        meta_description:
          type:
            - string
            - 'null'
          description: The meta description for the store's website for SEO.
          examples:
            - Abdullah's store sells a variety of goods ranging from electronics to home appliances.
        meta_title:
          type:
            - string
            - 'null'
          description: The meta title for the store's website for SEO.
          examples:
            - Abdullah's Store - Quality Electronics and Home Appliances
        privacy_policy:
          type:
            - array
            - 'null'
          description: The privacy policy details of the store.
          examples:
            - []
          items:
            type: string
        terms_conditions:
          type:
            - array
            - 'null'
          description: The terms and conditions of the store.
          examples:
            - []
          items:
            type: string
        complaints_and_suggestions:
          type:
            - array
            - 'null'
          description: Complaints and suggestions contact details or methods.
          examples:
            - []
          items:
            type: string
        license:
          type:
            - array
            - 'null'
          description: The licensing details for the store.
          examples:
            - []
          items:
            type: string
        refund_exchange_policy:
          type:
            - array
            - 'null'
          description: The refund and exchange policy details of the store.
          examples:
            - []
          items:
            type: string
        is_vat_required_in_subscription:
          type:
            - boolean
            - 'null'
          description: Indicates if Value Added Tax (VAT) is required in the store's subscription.
          examples:
            - true
        subscription:
          $ref: '#/components/schemas/StoreSubscription'
        availability:
          $ref: '#/components/schemas/StoreAvailability'
        created_at:
          type: string
          description: The timestamp when the store was created.
          examples:
            - '2022-12-14 11:35:23'
        is_mobile_verified:
          type: boolean
          description: Indicates if the mobile number associated with the store is verified.
          examples:
            - true
        is_readiness_completed:
          type: boolean
          description: Indicates if the readiness checks for the store are completed.
          examples:
            - true
        analytics_dashboard_token:
          type: string
          description: The token for accessing the store's analytics dashboard.
          examples:
            - 9a125104-2b46-4c0b-99bf-71df1178f49d
        storefront_theme:
          type:
            - string
            - 'null'
          description: The theme of the storefront for the store.
          examples:
            - null
        is_zidpay_activated:
          type: boolean
          description: 'Indicates if ZidPay, a payment solution, is activated for the store.'
          examples:
            - true
        is_zidship_activated:
          type: boolean
          description: 'Indicates if ZidShip, a shipping solution, is activated for the store.'
          examples:
            - false
        is_apple_pay_enabled_in_all_browsers:
          type: boolean
          description: Indicates if Apple Pay is enabled for all browsers in the store.
          examples:
            - false
        is_buy_as_a_guest_enabled:
          type: boolean
          description: Indicates if the option for customers to buy as a guest is enabled in the store.
          examples:
            - false
        system_tags:
          type: array
          description: A list of system tags associated with the store.
          examples:
            - - ZAM Partner
          items:
            type: string
        has_new_shipping_module:
          type: boolean
          description: Indicates if the store has a new shipping module.
          examples:
            - true
        has_multi_product_inventory:
          type: boolean
          description: 'Indicates if the store supports the [Multi-Inventory feature](../docs/multi-inventory.md).'
          examples:
            - true
        has_pos:
          type: boolean
          description: Indicates if the store has a point of sale (POS) system.
          examples:
            - false
        has_b2b_subscription:
          type: boolean
          description: Indicates if the store has a business-to-business (B2B) subscription.
          examples:
            - true
        has_new_themes_only:
          type:
            - boolean
            - 'null'
          description: Indicates if the store only has new themes.
          examples:
            - null
    StoreCurrency:
      type: object
      description: The currency information associated with the store.
      properties:
        id:
          type: integer
          description: The ID of the currency.
          examples:
            - 4
        name:
          type: string
          description: The name of the currency.
          examples:
            - ريال سعودي
        code:
          type: string
          description: The international three-letter code as defined by the ISO 4217 standard.
          examples:
            - SAR
        symbol:
          type: string
          description: The symbol of the currency.
          examples:
            - ' ر.س '
        country:
          $ref: '#/components/schemas/Country'
    StoreLanguage:
      type: object
      description: Information about the language used in the store.
      properties:
        id:
          type: integer
          description: The ID of the language.
          examples:
            - 2
        name:
          type: string
          description: The name of the language.
          examples:
            - العربية
        code:
          type: string
          description: The ISO 639-1 code for the language.
          examples:
            - ar
    StoreTheme:
      type: object
      description: Information about the store's theme.
      properties:
        id:
          type: integer
          description: The ID of the theme.
          examples:
            - 1
        code:
          type: string
          description: The unique code representing the theme.
          examples:
            - default_theme_code
        name:
          type: string
          description: The name of the theme.
          examples:
            - The Default Theme
        main_image:
          type: string
          description: The URL of the main image of the theme.
          examples:
            - 'https://zid-platform.s3-accelerate.amazonaws.com/public/default/themes/default/1.png'
        description:
          type:
            - string
            - 'null'
          description: A description of the theme.
          examples:
            - The default theme is designed to be generic enough to get you started and to serve the purpose of most stores. It also acts as a skeleton for further customization.
        images:
          type: array
          description: A list of URLs of the theme images.
          examples:
            - - 'https://zid-platform.s3-accelerate.amazonaws.com/public/default/themes/unique_theme_code/1.png'
              - 'https://zid-platform.s3-accelerate.amazonaws.com/public/default/themes/unique_theme_code/2.png'
              - 'https://zid-platform.s3-accelerate.amazonaws.com/public/default/themes/unique_theme_code/3.png'
    StoreSMSSenderName:
      type: object
      description: The sender name information for SMS campaigns.
      properties:
        sender_name:
          type:
            - string
            - 'null'
          description: The name of the sender in SMS campaigns.
          examples:
            - Abdullah's Store
        status:
          type: string
          description: The status of the SMS sender name.
          examples:
            - active
    StoreIndustry:
      type: object
      description: Information about the industry that the store belongs to.
      properties:
        id:
          type: integer
          description: The ID of the industry.
          examples:
            - 10
        name:
          type: string
          description: The name of the industry.
          examples:
            - Foods
        slug:
          type: string
          description: The URL-friendly version of the industry name.
          examples:
            - foods
        display_order:
          type: integer
          description: The order in which the industry is displayed relative to other industries.
          examples:
            - 1
    ProductCategory:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the category
          examples:
            - 875210
        name:
          type: string
          description: Name of the category
          examples:
            - Sport Shoes
        slug:
          type: string
          description: URL-friendly version of the category name
          examples:
            - sport-shoes
        SEO_category_title:
          type: string
          description: SEO optimized title for the category
          examples:
            - Sport Shoes - Run with Comfort
        SEO_category_description:
          type: string
          description: SEO optimized description for the category
          examples:
            - Our selection of sport shoes offers the best in comfort and performance for your athletic needs.
        names:
          type: object
          description: Category names in different languages
          properties:
            en:
              type: string
              examples:
                - Sport Shoes
            ar:
              type: string
              examples:
                - أحذية رياضية
        description:
          type: object
          description: Category descriptions in different languages
          properties:
            en:
              type: string
              examples:
                - Featuring a range of sport shoes for every sport from running to football.
            ar:
              type: string
              examples:
                - مجموعة متنوعة من الأحذية الرياضية لكل الرياضات من الجري إلى كرة القدم.
        url:
          type: string
          description: URL of the category on the web store
          examples:
            - 'https://example.zid.store/categories/875210/sport-shoes'
        image:
          type: string
          description: URL of the category's image (thumbnail size)
          examples:
            - 'https://media.zid.store/example-store/75decdde-4e94-45fe-8eb1-1edf4ead3ff0-260x260.png'
        image_full_size:
          type: string
          description: URL of the category's image (full size)
          examples:
            - 'https://media.zid.store/example-store/75decdde-4e94-45fe-8eb1-1edf4ead3ff0.png'
        img_alt_text:
          type: string
          description: Alternative text for the image for accessibility and SEO
          examples:
            - Sport shoes collection
        cover_image:
          type: string
          description: URL of the category's cover image
          examples:
            - 'https://media.zid.store/example-store/94b62e84-4ee3-4bfb-9833-6de53e2b8e1a.png'
        image_full:
          type: string
          description: Full sized category image
          examples:
            - 'https://media.zid.store/example-store/75decdde-4e94-45fe-8eb1-1edf4ead3ff0.png'
        products_count:
          type: integer
          description: Number of products under the category
          examples:
            - 120
        sub_categories:
          type: array
          description: List of sub-categories under this category. Empty if no sub-categories exist.
          items:
            $ref: '#/components/schemas/ProductCategory'
        parent_id:
          type:
            - integer
            - 'null'
          description: ID of the parent category. `Null` if this is a top-level category.
          examples:
            - null
        flat_name:
          type: string
          description: Flat representation of the category name
          examples:
            - Sport Shoes
        is_published:
          type: boolean
          description: Flag indicating if the category is currently published and visible on the store
          examples:
            - true
    StoreSubscription:
      type: object
      description: The subscription details of the store.
      properties:
        id:
          type: string
          description: The unique identifier for the subscription.
          examples:
            - c122e13b-c627-4b43-a6cf-1ab5e8f0cc8c
        cycle_id:
          type: string
          description: The identifier for the current subscription cycle.
          examples:
            - 33365cf5-1a16-4892-9cdc-426ed8d9370c
        is_warning:
          type: boolean
          description: Indicates if there's a warning related to the subscription.
          examples:
            - false
        is_suspended:
          type: boolean
          description: Indicates if the subscription is currently suspended.
          examples:
            - false
        is_expired:
          type: boolean
          description: Indicates if the subscription has expired.
          examples:
            - false
        is_lifetime:
          type: boolean
          description: Indicates if the subscription is lifetime.
          examples:
            - true
        expired_at:
          type:
            - string
            - 'null'
          description: 'The datetime when the subscription expires. If it is a lifetime subscription, this might be null.'
          format: date-time
          examples:
            - '2023-04-20T00:00:00+00:00'
        subscribed_at:
          type: string
          description: The datetime when the subscription was initiated.
          format: date-time
          examples:
            - '2023-04-20T00:00:00+00:00'
        suspension_start_date:
          type:
            - string
            - 'null'
          description: 'The datetime when the subscription was suspended. If the subscription was never suspended, this could be null.'
          format: date-time
          examples:
            - '2023-04-20T00:00:00+00:00'
        original_fractional_balance:
          type: integer
          description: 'The original fractional balance of the subscription, representing remaining value in fractional units.'
          examples:
            - 0
        message:
          type:
            - string
            - 'null'
          description: Any message or comment related to the subscription.
          examples:
            - null
        package_code:
          type: string
          description: The code for the subscription package.
          examples:
            - professional.lifetime
        package_key:
          type: string
          description: The key for the subscription package.
          examples:
            - professional
        package_variant:
          type: string
          description: The variant for the subscription package.
          examples:
            - lifetime
        package_name:
          type: object
          description: The name of the subscription package in multiple languages.
          properties:
            ar:
              type: string
              description: The name of the subscription package in Arabic.
              examples:
                - الاحترافية
            en:
              type: string
              description: The name of the subscription package in English.
              examples:
                - Professional
        full_package_name:
          type: object
          description: The full name of the subscription package in multiple languages.
          properties:
            ar:
              type: string
              description: The full name of the subscription package in Arabic.
              examples:
                - الاحترافية
            en:
              type: string
              description: The full name of the subscription package in English.
              examples:
                - Professional
        policies:
          type: object
          description: |
            The `policies` object is a collection of flags indicating the accessibility and activation status of various features and services offered by the subscription package. The keys of the `policies` object are the names of these features and services. Each key's value is a boolean that indicates whether the corresponding feature or service is active (true) or not active (false) for the given subscription.

            The features and services range from payment gateways, integrations with third-party services, marketing and analytics tools, to specific platform capabilities. The keys are named in a human-readable format which is typically lowercased and underscore-separated. For example, `moyasar_payment` or `new_order_sms`. The list of keys can evolve over time as the platform grows and adds more features and services.

            Please refer to the specific platform documentation or contact support for the latest and detailed list of available policies and their exact meanings.
        status:
          type: string
          description: The status of the subscription.
          examples:
            - ong
        is_trial:
          type: boolean
          description: Indicates whether the subscription is a trial.
          examples:
            - false
        recurring:
          type: boolean
          description: Indicates whether the subscription is recurring.
          examples:
            - true
        remaining_cycle:
          type: object
          description: The remaining duration of the current subscription cycle.
          properties:
            years:
              type: integer
              description: The remaining years of the subscription cycle.
              examples:
                - 0
            months:
              type: integer
              description: The remaining months of the subscription cycle.
              examples:
                - 1
            days:
              type: integer
              description: The remaining days of the subscription cycle.
              examples:
                - 5
        deprecated_keys:
          type: array
          description: A list of keys that have been deprecated from the subscription object.
          items:
            type: string
            examples:
              - is_expired
    StoreAvailability:
      type: object
      description: Information about the store's availability or operating status.
      properties:
        is_store_closed:
          type: boolean
          description: 'Indicates if the store is currently closed. True if closed, otherwise false.'
          examples:
            - false
        closing_type:
          type:
            - string
            - 'null'
          description: Specifies the type of closing if the store is closed.
          examples:
            - null
        closing_time_type:
          type:
            - string
            - 'null'
          description: Specifies the time type for the store's closing if applicable.
          examples:
            - null
        closed_now:
          type: boolean
          description: 'Indicates if the store is currently closed. True if closed, otherwise false.'
          examples:
            - false
        activating_data:
          type:
            - string
            - 'null'
          description: The activation data for the store if applicable.
          examples:
            - null
        closing_data:
          type:
            - string
            - 'null'
          description: The data related to the store's closing if applicable.
          examples:
            - null
        notify_customer:
          type: boolean
          description: 'Indicates if customers should be notified about the store''s operating status. True if notification is to be sent, otherwise false.'
          examples:
            - false
        is_time_counter_displayed:
          type:
            - boolean
            - 'null'
          description: 'Indicates if a time counter is displayed for the store. True if displayed, otherwise false.'
          examples:
            - null
        is_available_hours_visible:
          type:
            - boolean
            - 'null'
          description: 'Indicates if the store''s available hours are visible. True if visible, otherwise false.'
          examples:
            - null
        title:
          type: array
          description: 'The title related to the store''s availability, often in multiple languages.'
          examples:
            - []
          items:
            type: string
        message:
          type: array
          description: 'The message related to the store''s availability, often in multiple languages.'
          examples:
            - []
          items:
            type: string
        times:
          type: array
          description: The specific times related to the store's availability.
          examples:
            - []
          items:
            type: string
    StoreVatSettings:
      type: object
      description: Store VAT settings and tax configurations.
      properties:
        status:
          type: string
          description: The status of the VAT settings for the store.
          examples:
            - active
        tax_settings:
          type: object
          description: Detailed tax settings for the store.
          properties:
            countries:
              type: array
              description: List of all countries that have VAT settings configured.
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: VAT settings ID.
                    examples:
                      - vat_123
                  country:
                    $ref: '#/components/schemas/Country'
                  tax_percentage:
                    type: integer
                    description: The percentage of VAT for this country.
                    examples:
                      - 15
                  vat_number:
                    type: string
                    description: VAT number in this country.
                    examples:
                      - SA123456789
                  tax_registration_certificate_copy:
                    type: string
                    description: URL containing the registration certificate for this store.
                    examples:
                      - 'https://example.com/certificate.jpg'
            can_use_vat:
              type: boolean
              description: Indicates if this store is allowed to configure VAT settings.
              examples:
                - true
            vat_activate:
              type: boolean
              description: Indicates if the store has VAT settings activated.
              examples:
                - true
            is_vat_self_paid:
              type: boolean
              description: Indicates if the VAT is self-paid by the store.
              examples:
                - false
            is_vat_included_in_product_price:
              type: boolean
              description: Indicates if VAT is included in the product's final price.
              examples:
                - true
            is_shipping_fee_included_in_vat:
              type: boolean
              description: Indicates if VAT is applied to the shipping fee.
              examples:
                - false
            other_countries_tax_percentage:
              type: integer
              description: 'VAT percentage for other countries, if different.'
              examples:
                - 10
        message:
          $ref: '#/components/schemas/ResponseMessage'
    ResponseMessage:
      type: object
      properties:
        type:
          type: string
          description: The type of the message.
          examples:
            - object
        code:
          type: string
          description: The code associated with the message.
          examples:
            - '200'
        name:
          type: string
          description: The name of the message.
          examples:
            - Success
        description:
          type: string
          description: A detailed description of the message.
          examples:
            - Order details retrieved successfully.
    200-get-all-customers:
      type: object
      properties:
        status:
          type: string
        customers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: Customer id as in Zid DB
              city:
                type: object
                description: City object for the customer location
                properties:
                  country_id:
                    type: integer
                  country_name:
                    type: string
                  ar_name:
                    type: string
                  en_name:
                    type: string
                  id:
                    type: integer
                  name:
                    type: string
                  priority:
                    type: integer
              pivotMobile:
                type: string
                description: Customer mobile for this partic number with country code
              name:
                type: string
                description: Customer full name
              email:
                type: string
                description: Customer email
              mobile:
                type: string
                description: Mobile number for the customer across all stores
              nickname:
                type: string
                description: Customer nick name
              pivotEmail:
                type: string
                description: Customer email across all Zid stores
              order_counts:
                type: integer
                description: 'Total orders '
        total_customers_count:
          type: integer
          description: Total store customers
        message:
          type: object
          properties:
            type:
              type: string
    StoreSettings:
      type: object
      properties:
        is_gift_order_enabled:
          type: boolean
          description: Determines whether gift orders are enabled for the store.
          examples:
            - true
        is_gift_order_card_sender_custom_message_enabled:
          type: boolean
          description: Determines whether custom messages from the sender are enabled on gift cards.
          examples:
            - true
        is_gift_order_customer_motivation_enabled:
          type: boolean
          description: Determines whether customer motivation is enabled for gift orders.
          examples:
            - true
        is_gift_order_card_sender_custom_media_link_enabled:
          type: boolean
          description: Determines whether media links from the sender are enabled on gift cards.
          examples:
            - true
        is_gift_order_card_custom_template_enabled:
          type: boolean
          description: Determines whether custom templates are enabled for gift cards.
          examples:
            - true
        gift_order_card_custom_template_design:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the custom design template.
                examples:
                  - Spring Theme
              file:
                type: string
                description: The file link of the custom design template.
                examples:
                  - 'https://media.zid.store/7b2e8360-a350-4344-a833-ae2b698a4c60/751a4de4-4ad2-445e-8200-ac7f2c4dc8ca.jpg'
        gift_order_message_when_ready:
          type: string
          description: The custom message displayed when the gift order is ready.
          examples:
            - Your gift order is ready for pickup!
        gift_order_message_when_completed:
          type: string
          description: The custom message displayed when the gift order is completed.
          examples:
            - Thank you for your gift order!
    ProductAttributes:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
    ProductAttribute:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product attribute.
          examples:
            - 81ad822e-a9b2-4d4c-8a07-7f8110915e2f
        name:
          type: object
          properties:
            ar:
              type: string
              description: Name of the attribute in Arabic.
              examples:
                - اللون
            en:
              type: string
              description: Name of the attribute in English.
              examples:
                - Color
        slug:
          type: string
          description: 'SEO friendly URL, usually derived from the attribute name.'
          examples:
            - color
        value:
          type: object
          properties:
            ar:
              type: string
              description: Value of the attribute in Arabic.
              examples:
                - أسود
            en:
              type: string
              description: Value of the attribute in English.
              examples:
                - Black
    200-get-presets:
      type: object
      properties:
        count:
          type: integer
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              value:
                type: object
                properties:
                  ar:
                    type: string
                  en:
                    type: string
    200-post-presets:
      type: object
      properties:
        id:
          type: string
        value:
          type: object
          properties:
            ar:
              type: string
            en:
              type: string
    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product.
          examples:
            - 107c2ff5-5c70-4749-b9bd-56dc1793013b
        parent_id:
          type: string
          description: 'Unique identifier for the parent product, if any. This product could be a variant of the parent product.'
          examples:
            - 15b5ff5e-3d50-4559-8b21-42a58ea7f047
        sku:
          type: string
          description: Stock Keeping Unit - unique identifier that allows a product to be tracked for inventory purposes.
          examples:
            - ABCD-1234
        name:
          type: object
          description: Name of the product in multiple languages.
          properties:
            ar:
              type: string
              examples:
                - حذاء رياضي أنيق
            en:
              type: string
              examples:
                - Stylish Sneakers
        slug:
          type: string
          description: 'SEO friendly URL, usually derived from the product name.'
          examples:
            - stylish-sneakers
        description:
          type: string
          description: Detailed description of the product.
          examples:
            - Comfortable and stylish sneakers perfect for everyday wear.
        product_class:
          type: string
          description: Class or type of the product.
          examples:
            - Sneaker
        keywords:
          type: array
          description: Keywords associated with the product for search optimization.
          examples:
            - - sneaker
              - shoes
              - footwear
          items:
            type: string
        seo:
          $ref: '#/components/schemas/ProductSeo'
        requires_shipping:
          type: boolean
          description: Indicates if the product requires shipping.
          examples:
            - true
        is_taxable:
          type: boolean
          description: Indicates if taxes are applicable to the product.
          examples:
            - true
        store_id:
          type: integer
          description: Unique identifier of the store in which the product is listed.
          examples:
            - 1234
        price:
          type: string
          description: The selling price of the product.
          examples:
            - '100.00000'
        sale_price:
          type: string
          description: The sale (discounted) price of the product.
          examples:
            - '85.00000'
        formatted_price:
          type: string
          description: 'Price of the product, formatted with currency symbol for display purposes.'
          examples:
            - $100.00
        formatted_sale_price:
          type: string
          description: 'Sale price of the product, formatted with currency symbol for display purposes.'
          examples:
            - $80.00
        currency:
          type: string
          description: 'Currency code in which the prices are displayed, such as USD or EUR.'
          examples:
            - USD
        currency_symbol:
          type: string
          description: 'Symbol of the currency in which the prices are displayed, such as $ or €.'
          examples:
            - $
        display_order:
          type: integer
          description: Order in which the product is displayed relative to other products.
          examples:
            - 3
        is_infinite:
          type: boolean
          description: Indicates if the product has infinite stock.
          examples:
            - false
        quantity:
          type: integer
          description: The quantity of the product in stock.
          examples:
            - 45
        stocks:
          $ref: '#/components/schemas/ProductStocks'
        sold_products_count:
          type: integer
          description: Number of units of this product that have been sold.
          examples:
            - 200
        has_options:
          type: boolean
          description: Indicates if the product has additional options like color or size.
          examples:
            - true
        has_fields:
          type: boolean
          description: Indicates if the product has additional fields for customization or personalization.
          examples:
            - false
        categories:
          type: array
          description: List of categories to which the product belongs.
          items:
            $ref: '#/components/schemas/ProductCategory'
        attributes:
          type: array
          description: 'List of product attributes. These can include details such as color, size, material, etc.'
          items:
            $ref: '#/components/schemas/ProductAttribute'
        variants:
          type: array
          description: 'List of variations of the product. For example, different colors or sizes of a shoe model.'
          items:
            $ref: '#/components/schemas/ProductVariant'
        options:
          type: array
          description: 'List of additional options that can be selected for the product. For instance, additional features or add-ons.'
          items:
            $ref: '#/components/schemas/ProductOption'
        images:
          type: array
          description: List of images associated with the product.
          items:
            $ref: '#/components/schemas/ProductImage'
        rating:
          $ref: '#/components/schemas/ProductRating'
          description: Ratings associated with the product.
        created_at:
          type: string
          description: The timestamp of when the product was created.
          examples:
            - '2019-05-01T08:18:47.568309Z'
        updated_at:
          type: string
          description: The timestamp of when the product was last updated.
          examples:
            - '2019-05-06T19:08:40.734940Z'
        structure:
          type: string
          description: Structure or format of the product data.
          examples:
            - JSON
        html_url:
          type: string
          description: URL of the product's page in HTML format.
          examples:
            - 'https://www.example.com/product/sneaker'
        is_draft:
          type: boolean
          description: Indicates whether the product is a draft or published.
          examples:
            - false
        meta:
          type: string
          description: Meta-information about the product.
          examples:
            - Some meta information
      required:
        - id
        - name
        - slug
        - price
    ProductSeo:
      type: object
      description: SEO-related data for the product.
      properties:
        title:
          type: string
          description: SEO title for the product page.
          examples:
            - Black Sneaker - Best for Sports
        description:
          type: string
          description: SEO description for the product page.
          examples:
            - 'Buy our Black Sneaker, perfect for sports and casual wear. Free shipping!'
    ProductStocks:
      type: array
      description: Array of stocks available for the product.
      items:
        $ref: '#/components/schemas/ProductStock'
    ProductStock:
      type: object
      properties:
        product_id:
          type: string
          description: The product ID that the stock is related to.
        location:
          type: string
          description: The location of the stock.
        quantity:
          type:
            - integer
            - 'null'
          description: The quantity of the product in stock. Set to `null` if `is_infinite` is set to `true`.
        is_infinite:
          type: boolean
          description: Set to `true` if the product quantity is infinite.
    ProductVariant:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product variant.
          examples:
            - 81ad822e-a9b2-4d4c-8a07-7f8110915e2f
        attributes:
          $ref: '#/components/schemas/ProductAttributes'
    ProductOption:
      type: object
      description: An object representing a specific selectable feature for a product. It includes the name and possible values of the feature in different languages.
      properties:
        id:
          type: string
          description: Unique identifier for the product option.
          examples:
            - 81ad822e-a9b2-4d4c-8a07-7f8110915e2f
        name:
          type: object
          properties:
            ar:
              type: string
              description: Name of the option in Arabic.
              examples:
                - اللون
            en:
              type: string
              description: Name of the option in English.
              examples:
                - Color
        slug:
          type: string
          description: 'SEO friendly URL, usually derived from the option name.'
          examples:
            - color
        values:
          type: object
          description: Object containing arrays of possible values for the option in different languages.
          properties:
            ar:
              type: array
              description: List of possible values for the option in Arabic.
              examples:
                - - أسود
                  - أحمر
              items:
                type: string
            en:
              type: array
              description: List of possible values for the option in English.
              examples:
                - - Black
                  - Red
              items:
                type: string
    ProductImage:
      type: object
      description: Information about a product image.
      properties:
        id:
          type: string
          description: Unique identifier for the image.
          examples:
            - 61ae9270-cf8f-11ea-87d0-0242ac130004
        image:
          $ref: '#/components/schemas/ProductImageSizes'
        alt_text:
          type: string
          description: Alternative text for the image.
          examples:
            - Black Sneaker
        display_order:
          type: integer
          description: Determines the display order of images. Lower values have priority.
          examples:
            - 1
    ProductImageSizes:
      type: object
      description: Different sizes of a product image.
      properties:
        thumbnail:
          type: string
          description: URL of the thumbnail version of the image.
          examples:
            - 'https://example.com/images/thumbnail.jpg'
        full_size:
          type: string
          description: URL of the full-size version of the image.
          examples:
            - 'https://example.com/images/full.jpg'
        medium:
          type: string
          description: URL of the medium-sized version of the image.
          examples:
            - 'https://example.com/images/medium.jpg'
        small:
          type: string
          description: URL of the small-sized version of the image.
          examples:
            - 'https://example.com/images/small.jpg'
        large:
          type: string
          description: URL of the large-sized version of the image.
          examples:
            - 'https://example.com/images/large.jpg'
    ProductRating:
      type: object
      description: Overall rating and detailed rating breakdown of the product.
      properties:
        average:
          type: number
          description: Average rating of the product.
          examples:
            - 4.5
        total_count:
          type: integer
          description: Total number of ratings given to the product.
          examples:
            - 200
        1_ratings:
          $ref: '#/components/schemas/ProductRatingDetail'
        2_ratings:
          $ref: '#/components/schemas/ProductRatingDetail'
        3_ratings:
          $ref: '#/components/schemas/ProductRatingDetail'
        4_ratings:
          $ref: '#/components/schemas/ProductRatingDetail'
        5_ratings:
          $ref: '#/components/schemas/ProductRatingDetail'
    ProductRatingDetail:
      type: object
      description: Details about a specific rating level for the product.
      properties:
        percentage:
          type: integer
          description: Percentage of total ratings that this rating level represents.
          examples:
            - 20
        count:
          type: integer
          description: Number of times this rating level has been given to the product.
          examples:
            - 40
    Products:
      type: object
      properties:
        next:
          type: string
          description: URL for the next page in the paginated response. `null` if this is the last page.
        previous:
          type: string
          description: URL for the previous page in the paginated response. `null` if this is the first page.
        count:
          type: integer
          description: Total count of products available in the store.
        results:
          type: array
          description: Array of product objects representing each product in the current page of results.
          items:
            $ref: '#/components/schemas/Product'
        filters:
          type: object
          description: Object containing any applied filters on the product list. Each key is a filter name and the corresponding value is the filter's applied value.
    ProductUpdate:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product
          examples:
            - 63e88761-ed29-40f7-9d75-c4729d22ff4e
        sku:
          type: string
          description: Stock Keeping Unit associated with the product
          examples:
            - skuExample
        name:
          type: object
          description: Product name in different languages
          properties:
            ar:
              type: string
              examples:
                - تويتر
            en:
              type: string
              examples:
                - twitter
        description:
          type: object
          description: Product description in different languages
          properties:
            ar:
              type: string
              examples:
                - منتج اختبار
            en:
              type: string
              examples:
                - This is a test product
        price:
          type: string
          description: Product price
          examples:
            - '12.444'
        cost:
          type: string
          description: Cost of the product
          examples:
            - '10'
        is_draft:
          type: boolean
          description: Flag to indicate if the product is in draft mode
          examples:
            - false
        quantity:
          type: integer
          description: Quantity of the product in stock
          examples:
            - 1
        is_infinite:
          type: boolean
          description: Flag to indicate if the product quantity is infinite
          examples:
            - false
        weight:
          type: object
          description: Weight of the product
          properties:
            unit:
              type: string
              examples:
                - kg
            value:
              type: integer
              examples:
                - 100
        keywords:
          type: array
          description: Keywords associated with the product
          examples:
            - - apps
              - social
        requires_shipping:
          type: boolean
          description: Flag to indicate if the product requires shipping
          examples:
            - true
        is_published:
          type: boolean
          description: Flag to indicate if the product is published
          examples:
            - true
      required:
        - id
        - sku
    Product_CustomerView:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product.
          examples:
            - 107c2ff5-5c70-4749-b9bd-56dc1793013b
        parent_id:
          type: string
          description: 'Unique identifier for the parent product, if any. This product could be a variant of the parent product.'
          examples:
            - 15b5ff5e-3d50-4559-8b21-42a58ea7f047
        sku:
          type: string
          description: Stock Keeping Unit - unique identifier that allows a product to be tracked for inventory purposes.
          examples:
            - ABCD-1234
        name:
          type: object
          description: Name of the product in multiple languages.
          properties:
            ar:
              type: string
              examples:
                - حذاء رياضي أنيق
            en:
              type: string
              examples:
                - Stylish Sneakers
        slug:
          type: string
          description: 'SEO friendly URL, usually derived from the product name.'
          examples:
            - stylish-sneakers
        description:
          type: string
          description: Detailed description of the product.
          examples:
            - Comfortable and stylish sneakers perfect for everyday wear.
        product_class:
          type: string
          description: Class or type of the product.
          examples:
            - Sneaker
        keywords:
          type: array
          description: Keywords associated with the product for search optimization.
          examples:
            - - sneaker
              - shoes
              - footwear
          items:
            type: string
        seo:
          $ref: '#/components/schemas/ProductSeo'
        requires_shipping:
          type: boolean
          description: Indicates if the product requires shipping.
          examples:
            - true
        is_taxable:
          type: boolean
          description: Indicates if taxes are applicable to the product.
          examples:
            - true
        store_id:
          type: integer
          description: Unique identifier of the store in which the product is listed.
          examples:
            - 1234
        price:
          type: string
          description: The selling price of the product.
          examples:
            - '100.00000'
        sale_price:
          type: string
          description: The sale (discounted) price of the product.
          examples:
            - '85.00000'
        formatted_price:
          type: string
          description: 'Price of the product, formatted with currency symbol for display purposes.'
          examples:
            - $100.00
        formatted_sale_price:
          type: string
          description: 'Sale price of the product, formatted with currency symbol for display purposes.'
          examples:
            - $80.00
        currency:
          type: string
          description: 'Currency code in which the prices are displayed, such as USD or EUR.'
          examples:
            - USD
        currency_symbol:
          type: string
          description: 'Symbol of the currency in which the prices are displayed, such as $ or €.'
          examples:
            - $
        display_order:
          type: integer
          description: Order in which the product is displayed relative to other products.
          examples:
            - 3
        is_infinite:
          type: boolean
          description: Indicates if the product has infinite stock.
          examples:
            - false
        quantity:
          type: integer
          description: The quantity of the product in stock.
          examples:
            - 45
        stocks:
          $ref: '#/components/schemas/ProductStocks'
        sold_products_count:
          type: integer
          description: Number of units of this product that have been sold.
          examples:
            - 200
        has_options:
          type: boolean
          description: Indicates if the product has additional options like color or size.
          examples:
            - true
        has_fields:
          type: boolean
          description: Indicates if the product has additional fields for customization or personalization.
          examples:
            - false
        categories:
          type: array
          description: List of categories to which the product belongs.
          items:
            $ref: '#/components/schemas/ProductCategory'
        attributes:
          type: array
          description: 'List of product attributes. These can include details such as color, size, material, etc.'
          items:
            $ref: '#/components/schemas/ProductAttribute'
        variants:
          type: array
          description: 'List of variations of the product. For example, different colors or sizes of a shoe model.'
          items:
            $ref: '#/components/schemas/ProductVariant'
        options:
          type: array
          description: 'List of additional options that can be selected for the product. For instance, additional features or add-ons.'
          items:
            $ref: '#/components/schemas/ProductOption'
        images:
          type: array
          description: List of images associated with the product.
          items:
            $ref: '#/components/schemas/ProductImage'
        rating:
          $ref: '#/components/schemas/ProductRating'
          description: Ratings associated with the product.
        structure:
          type: string
          description: Structure or format of the product data.
          examples:
            - JSON
        html_url:
          type: string
          description: URL of the product's page in HTML format.
          examples:
            - 'https://www.example.com/product/sneaker'
    200-get-images:
      type: object
      properties:
        id:
          type: string
        name:
          type: object
          properties:
            ar:
              type: string
            en:
              type: string
        created_at:
          type: string
        sku:
          type: string
        slug:
          type: string
        price:
          type: string
        description:
          type: string
        variants:
          type: array
          items:
            type: object
            properties:
              is_draft:
                type: boolean
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: object
                      properties:
                        ar:
                          type: string
                        en:
                          type: string
              name:
                type: object
                properties:
                  ar:
                    type: string
              slug:
                type: string
              quantity:
                type: integer
              id:
                type: string
              sku:
                type: string
              description:
                type: string
              price:
                type: string
        images:
          type: array
          items:
            type: object
            properties:
              image:
                type: object
                properties:
                  small:
                    type: string
                  large:
                    type: string
                  thumbnail:
                    type: string
                  full_size:
                    type: string
                  medium:
                    type: string
        updated_at:
          type: string
        options:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              slug:
                type: string
        is_draft:
          type: boolean
        quantity:
          type: integer
    200-patch-image-order:
      type: object
      properties:
        image:
          type: object
          properties:
            small:
              type: string
            medium:
              type: string
            full_size:
              type: string
            thumbnail:
              type: string
            large:
              type: string
        display_order:
          type: integer
        id:
          type: string
    200-post-product-option-custom:
      type: object
      properties:
        type:
          type: string
        hint:
          type: object
          properties:
            ar:
              type: string
            en:
              type: string
        label:
          type: object
          properties:
            ar:
              type: string
        id:
          type: string
    Location:
      type: object
      description: Details of a location in the system
      properties:
        id:
          type: string
          description: Unique identifier for the location
          examples:
            - 10ce520d-c14c-4fd2-aa18-e885dc8d1ae8
        name:
          type: object
          description: Name of the location in multiple languages
          properties:
            ar:
              type: string
              description: Name in Arabic
              examples:
                - مخزن الرياض
            en:
              type: string
              description: Name in English
              examples:
                - Riyadh Warehouse
        city:
          type: object
          description: Details of the city where the location is
          properties:
            id:
              type: integer
              description: Unique identifier for the city
              examples:
                - 101
            name:
              type: string
              description: Name of the city in English
              examples:
                - Riyadh
            ar_name:
              type: string
              description: Name of the city in Arabic
              examples:
                - الرياض
            country:
              type: object
              description: Details of the country where the city is
              properties:
                id:
                  type: integer
                  description: Unique identifier for the country
                  examples:
                    - 184
                name:
                  type: string
                  description: Name of the country in English
                  examples:
                    - Saudi Arabia
                ar_name:
                  type: string
                  description: Name of the country in Arabic
                  examples:
                    - السعودية
                iso_code_2:
                  type: string
                  description: Two-letter country code according to ISO 3166
                  examples:
                    - SA
                iso_code_3:
                  type: string
                  description: Three-letter country code according to ISO 3166
                  examples:
                    - SAU
        type:
          type: string
          description: Type of location
          examples:
            - PHYSICAL
        coordinates:
          type: object
          description: Geographic coordinates of the location
          properties:
            latitude:
              type: number
              description: Latitude of the location
              examples:
                - 24.7136
            longitude:
              type: number
              description: Longitude of the location
              examples:
                - 46.6753
        full_address:
          type: string
          description: Full address of the location
          examples:
            - 'RHHB4094, 4094 Al Aflaj, حي الواحة, Riyadh 12442, Saudi Arabia'
        fulfillment_priority:
          type:
            - integer
            - 'null'
          description: 'Priority for fulfillment operations. Null or 0 indicates no specific priority. Lower numbers indicate higher priority. Therefore, `1` is the highest priority.'
          examples:
            - null
        is_default:
          type: boolean
          description: Indicates whether this is the default location
          examples:
            - true
        is_private:
          type: boolean
          description: Indicates whether this location is private
          examples:
            - false
        is_enabled:
          type: boolean
          description: Indicates whether this location is enabled
          examples:
            - true
        has_stocks:
          type: boolean
          description: Indicates whether this location has any stocks
          examples:
            - false
        channels:
          type: array
          description: |
            Channels this location is available in. 
            It is an array of strings, with each string representing a channel.
            For example, the channels array could be ["catalog", "online", "physical_store", "direct_sales"].
          items:
            type: string
            examples:
              - catalog
    LocationUpdate:
      type: object
      description: Updated details about a location.
      properties:
        name:
          type: string
          description: New name of the location.
          examples:
            - Renamed Warehouse
        description:
          type: string
          description: New description of the location.
          examples:
            - Warehouse has been relocated to the suburban area.
        is_active:
          type: boolean
          description: New active status of the location.
          examples:
            - false
    200-get-all-inventory:
      type: object
      properties:
        status:
          type: string
        inventory_addresses:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: Inventory id as in Zid DB
              city:
                type: object
                description: Inventory location and country
                properties:
                  country_name:
                    type: string
                  ar_name:
                    type: string
                  en_name:
                    type: string
                  id:
                    type: integer
                  name:
                    type: string
                  priority:
                    type: integer
                  country_id:
                    type: integer
              street:
                type: string
              is_pickup_option:
                type: boolean
                description: Indicate if this inventroy is a valid pickup location or it is for storage only
              extra_data:
                type: object
                properties:
                  zid_front_point:
                    type: object
                    properties:
                      pickupPointId:
                        type: string
              name:
                type: string
              postal_code:
                type: string
              coordinates:
                type: object
                description: Inventory geo location
                properties:
                  lat:
                    type: integer
                  lon:
                    type: integer
              cop_enabled:
                type: boolean
                description: 'Indicate if Cash On Pickup enabled for this inventory '
        message:
          type: object
          properties:
            type:
              type: string
    AbandonedCartBrief:
      type: object
      title: AbandonedCartBrief
      description: |
        Brief representation of an abandoned cart as seen in the response to the 
        [List Abandoned Carts](../reference/merchant-api.yaml/paths/~1managers~1store~1abandoned-carts/get) endpoint. 
        This version provides a concise overview of the cart 
        without all the detailed properties. To get a detailed version of a certain cart, use the 
        [Get Abandoned Cart Details](../reference/merchant-api.yaml/paths/~1managers~1store~1abandoned-carts~1{cart-id}/get) endpoint.
      properties:
        id:
          type: string
          description: Unique identifier for the abandoned cart.
          examples:
            - 18a40fc6-2381-4ab2-9f72-467e6c39a599
        store_id:
          type: string
          description: Unique identifier for the store.
          examples:
            - 3dfc16e6-ad19-4126-9c2a-5e4a7fb73051
        session_id:
          type: string
          description: Session identifier for the abandoned cart.
          examples:
            - WS56eLg6j2J2KAFB6KkX0B3uJSs3oINu
        url:
          type: string
          description: URL to access the abandoned cart and continue the checkout process. This is crucial for re-engaging customers.
          examples:
            - 'https://store.zidtest.com/checkout/fromBasket/WS56eLg6j2J2KAFB6KkX0B3uJSs3oINu'
        cart_id:
          type: string
          description: Cart identifier.
          examples:
            - '237245'
        order_id:
          type: integer
          description: 'Unique identifier for the order associated with the abandoned cart, if any.'
          examples:
            - 12675
        phase:
          type: string
          description: |
            Current phase of the abandoned cart. This indicates the last step the customer reached before abandoning the cart.
            The phases are as follows:
            - `completed`: The cart has been converted into an order.
            - `shipping_address`: The customer has provided a shipping address.
            - `verification`: The customer is in the verification process.
            - `shipping_method`: The customer has chosen a shipping method.
            - `new`: The cart has been recently created but no further action has been taken.
            - `login`: The customer is prompted to log in or register.
        customer_id:
          type: integer
          description: Unique identifier for the customer.
          examples:
            - 6
        customer_name:
          type: string
          description: Name of the customer.
          examples:
            - Abdul Rahman
        customer_email:
          type: string
          description: Email address of the customer.
          examples:
            - abdulrahman3344@gmai.com
        customer_mobile:
          type: string
          description: Mobile number of the customer.
          examples:
            - '966500000005'
        city_id:
          type: integer
          description: Identifier for the city associated with the customer's address.
          examples:
            - 1
        products_count:
          type: integer
          description: Number of products in the abandoned cart.
          examples:
            - 1
        reminders_count:
          type: integer
          description: Number of reminders sent for the abandoned cart.
          examples:
            - 11
        cart_total:
          type: number
          description: Total value of the abandoned cart.
          format: float
          examples:
            - 11.5
        cart_total_string:
          type: string
          description: Total value of the abandoned cart in string format with currency.
          examples:
            - 11.50 SAR
        whatsapp_message:
          type: string
          description: Custom message from the merchant to the customer regarding the abandoned cart items.
        created_at:
          type: string
          description: Timestamp when the cart was created.
          format: date-time
          examples:
            - '2023-07-12 08:17:02'
        updated_at:
          type: string
          description: Timestamp when the cart was last updated.
          format: date-time
          examples:
            - '2023-07-19 09:01:18'
    AbandonedCartDetailed:
      type: object
      title: AbandonedCartDetailed
      description: |
        Detailed representation of an abandoned cart. Abandoned carts represent shopping carts that 
        customers have added products to but did not complete the purchase. A cart becomes abandoned after 60 minutes of inactivity.
      properties:
        status:
          type: string
          description: The status of the request.
          examples:
            - object
        abandoned_cart:
          type: object
          description: Details of the abandoned cart.
          properties:
            id:
              type: string
              description: Unique identifier for the abandoned cart.
              examples:
                - 18a40fc6-2381-4ab2-9f72-467e6c39a599
            session_id:
              type: string
              description: Session identifier for the abandoned cart.
              examples:
                - WS56eLg6j2J2KAFB6KkX0B3uJSs3oINu
            url:
              type: string
              description: URL to access the abandoned cart and continue the checkout process. This is crucial for re-engaging customers.
              examples:
                - 'https://store.zidtest.com/checkout/fromBasket/WS56eLg6j2J2KAFB6KkX0B3uJSs3oINu'
            cart_id:
              type: string
              description: Cart identifier.
              examples:
                - '237245'
            store_id:
              type: string
              description: Unique identifier for the store.
              examples:
                - 3dfc16e6-ad19-4126-9c2a-5e4a7fb73051
            store_name:
              type: string
              description: Name of the store.
              examples:
                - Zid Store on Testing
            store_logo:
              type: string
              description: URL of the store's logo.
              examples:
                - 'https://zid-testing.s3.eu-west-1.amazonaws.com/3dfc16e6-ad19-4126-9c2a-5e4a7fb73051/d24a04a4-483c-4cfd-937e-35e7f419d127-200x.png'
            store_url:
              type: string
              description: URL of the store.
              examples:
                - 'https://store.zidtest.com/'
            order_id:
              type: integer
              description: 'Unique identifier for the order associated with the abandoned cart, if any.'
              examples:
                - 12675
            phase:
              type: string
              description: |
                Current phase of the abandoned cart. This indicates the last step the customer reached before abandoning the cart.
                The phases are as follows:
                - `completed`: The cart has been converted into an order.
                - `shipping_address`: The customer has provided a shipping address.
                - `verification`: The customer is in the verification process.
                - `shipping_method`: The customer has chosen a shipping method.
                - `new`: The cart has been recently created but no further action has been taken.
                - `login`: The customer is prompted to log in or register.
              examples:
                - completed
            customer_id:
              type: integer
              description: Unique identifier for the customer.
              examples:
                - 6
            customer_name:
              type: string
              description: Name of the customer.
              examples:
                - Abdul Rahman
            customer_email:
              type: string
              description: Email address of the customer.
              examples:
                - abdulrahman3344@gmai.com
            customer_mobile:
              type: string
              description: Mobile number of the customer.
              examples:
                - '966500000005'
            city_id:
              type: integer
              description: Identifier for the city associated with the customer's address.
              examples:
                - 1
            products_count:
              type: integer
              description: Number of products in the abandoned cart.
              examples:
                - 1
            products:
              type: array
              description: List of products in the abandoned cart.
              items:
                $ref: '#/components/schemas/Product'
            city:
              $ref: '#/components/schemas/City'
            reminders_count:
              type: integer
              description: Number of reminders sent for the abandoned cart.
              examples:
                - 11
            cart_total:
              type: number
              description: Total value of the abandoned cart.
              format: float
              examples:
                - 11.5
            cart_total_string:
              type: string
              description: Total value of the abandoned cart in string format with currency.
              examples:
                - 11.50 SAR
            whatsapp_message:
              type: string
              description: Custom message from the merchant to the customer regarding the abandoned cart items.
            history:
              type: array
              description: History of actions related to the abandoned cart.
              items:
                type: object
                properties:
                  uuid:
                    type: string
                    description: Unique identifier for the history entry.
                  abandoned_cart_id:
                    type: string
                    description: Identifier linking to the abandoned cart.
                    examples:
                      - 18a40fc6-2381-4ab2-9f72-467e6c39a599
                  type:
                    type: string
                    description: Type of action performed.
                    examples:
                      - تم إرسال التذكير
                  created_at:
                    type: string
                    description: Timestamp when the action was performed.
                    format: date-time
                    examples:
                      - '2023-07-12T10:17:42.000000Z'
                  updated_at:
                    type: string
                    description: Timestamp when the action was last updated.
                    format: date-time
                    examples:
                      - '2023-07-12T10:17:42.000000Z'
            created_at:
              type: string
              description: Timestamp when the cart was created.
              format: date-time
              examples:
                - '2023-07-12 08:17:02'
            updated_at:
              type: string
              description: Timestamp when the cart was last updated.
              format: date-time
              examples:
                - '2023-07-19 09:01:18'
        message:
          type: object
          description: Message related to the request status.
          properties:
            type:
              type: string
              description: Type of the message.
              examples:
                - object
            code:
              type: string
              description: Code associated with the message.
            name:
              type: string
              description: Name of the message.
            description:
              type: string
              description: Detailed description of the message.
    200-get-all-categories:
      type: object
      properties:
        message:
          type: object
          properties:
            type:
              type: string
        status:
          type: string
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              names:
                type: object
                properties:
                  ar:
                    type: string
              flat_name:
                type: string
              is_published:
                type: boolean
              SEO_category_title:
                type: string
              SEO_category_description:
                type: string
              url:
                type: string
              products_count:
                type: integer
              slug:
                type: string
        minimal_categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              is_published:
                type: boolean
        products_count:
          type: integer
    200-get-single-category:
      type: object
      properties:
        status:
          type: string
        categories:
          type: object
          properties:
            slug:
              type: string
            url:
              type: string
            products_count:
              type: integer
            SEO_category_title:
              type: string
            SEO_category_description:
              type: string
            names:
              type: object
              properties:
                ar:
                  type: string
            id:
              type: integer
            name:
              type: string
            flat_name:
              type: string
            is_published:
              type: boolean
            description:
              type: object
              properties:
                en:
                  type: string
                ar:
                  type: string
        message:
          type: object
          properties:
            type:
              type: string
    200-post-product-categories:
      type: object
      properties:
        id:
          type: string
        name:
          type: object
          properties:
            ar:
              type: string
            en:
              type: string
        description:
          type: object
          properties:
            ar:
              type: string
            en:
              type: string
    200-post-product-input-custom:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        hint:
          type: object
          properties:
            en:
              type: string
            ar:
              type: string
        label:
          type: object
          properties:
            en:
              type: string
            ar:
              type: string
    CartResponse:
      type: object
      properties:
        code:
          type: string
          description: The response code indicating the result of the API operation.
          examples:
            - SUCCESS_WITH_SINGLE_PAYLOAD_OBJECT
        message:
          type:
            - string
            - 'null'
          description: An optional message providing additional information about the API operation result.
        payload:
          $ref: '#/components/schemas/Cart'
          description: Contains the data payload of the response.
    Cart:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the cart.
          examples:
            - 186720
        session_id:
          type: string
          description: The session ID associated with the cart.
          examples:
            - YrYr5AAWLzt2rHKcI1ys4FXNmxunLwCp
        phase:
          type: string
          description: The current phase or status of the cart.
          examples:
            - new
        required_customer_email:
          type: boolean
          description: Whether a customer email is required for this cart.
          examples:
            - false
        order_status:
          type: object
          description: The current order status associated with the cart.
          properties:
            name:
              type: string
              description: The name of the order status.
              examples:
                - Initial
            code:
              type: string
              description: The code representing the order status.
              examples:
                - initial
        order_status_id:
          type: integer
          description: The unique identifier of the order status associated with the cart.
          examples:
            - 1
        total:
          type: string
          description: The total value of the items in the cart.
          examples:
            - '0.00'
        total_quantity:
          type: integer
          description: The total quantity of items in the cart.
          examples:
            - 0
        products:
          type: array
          description: An array of products added to the cart.
          items:
            $ref: '#/components/schemas/Product'
        cart_active:
          type: boolean
          description: Specifies whether the cart is active or not.
          examples:
            - true
        checkout_restrictions:
          $ref: '#/components/schemas/CheckoutRestrictions'
          description: The restrictions applicable during the checkout process for this cart.
        timestamp:
          type: string
          description: The timestamp when the cart was last updated.
          examples:
            - '2023-05-22T18:32:31+00:00'
        expiration_time:
          type: string
          description: The timestamp indicating when the cart is set to expire.
          examples:
            - '2023-05-29T18:32:31+00:00'
        current_date:
          type: string
          description: The current date according to the server.
          examples:
            - '2023-05-22'
    CheckoutRestrictions:
      type: object
      properties:
        someRestrictionField:
          type: string
          description: A brief description of what this field represents.
          examples:
            - example value
    Coupon:
      type: object
      title: Coupon
      description: The schema of a discount coupon.
      properties:
        coupon_id:
          type: integer
          description: The unique identifier for the coupon.
          examples:
            - 488635
        code:
          type: string
          description: The unique code for the coupon.
          examples:
            - SUMMER2023
        uses_total:
          type: integer
          description: The maximum number of times the coupon can be used.
          examples:
            - 500
        created_at:
          type: string
          description: The date and time when the coupon was created.
          examples:
            - '2023-08-23T14:45:32.000000Z'
        name:
          type: string
          description: The name of the coupon for the merchant's own reference.
          examples:
            - Summer Sale - July 2023
        total_usage:
          type:
            - integer
            - 'null'
          description: The total number of times the coupon has been used.
          examples:
            - 0
        discount_type:
          type: string
          description: 'The type of discount (''f'' for fixed amount, ''p'' for percentage).'
          examples:
            - p
        discount:
          type: integer
          description: The value of the discount.
          examples:
            - 50
        logged:
          type: boolean
          description: Indicates whether the user needs to be logged in to use the coupon.
          examples:
            - false
        free_shipping:
          type: boolean
          description: Indicates whether the coupon provides free shipping.
          examples:
            - true
        free_cod:
          type: boolean
          description: Indicates whether the coupon provides free Cash On Delivery (COD).
          examples:
            - true
        total:
          type: integer
          description: The minimum total amount of items in the cart required to apply the coupon.
          examples:
            - 10
        date_start:
          type: string
          description: The start date for the coupon validity.
          examples:
            - '2023-01-01'
        date_end:
          type: string
          description: The end date for the coupon validity.
          examples:
            - '2025-01-01'
        uses_customer:
          type: integer
          description: The maximum number of times a single customer can use the coupon.
          examples:
            - 500
        coupon_status:
          type: boolean
          description: Indicates whether the coupon is active.
          examples:
            - true
        enabled:
          type: boolean
          description: Indicates whether the coupon is enabled.
          examples:
            - true
        status_code:
          type: string
          description: The status code for the coupon.
          examples:
            - coupon_active
        maximum_discount_value:
          type:
            - integer
            - 'null'
          description: The maximum discount value that can be applied.
          examples:
            - 100
        orders:
          type: array
          description: An array of orders that have used this coupon.
          examples:
            - []
          items:
            type: string
        total_sales:
          type: integer
          description: The total sales generated using this coupon.
          examples:
            - 0
        total_customers:
          type: integer
          description: The total number of customers who have used this coupon.
          examples:
            - 0
        note:
          type:
            - string
            - 'null'
          description: Any notes or comments about the coupon.
          examples:
            - This is for the Summer Sale of 2023.
        is_mazeed_active:
          type: boolean
          description: Indicates whether the coupon is active in Mazeed.
          examples:
            - false
        is_pos_active:
          type: boolean
          description: Indicates whether the coupon is active in the Point of Sale system.
          examples:
            - false
        apply_to:
          type: string
          enum:
            - all
            - non_discounted_products
            - discounted_products
            - products
            - categories
            - excluded_products
          description: Specifies where the coupon can be applied.
          examples:
            - all
        apply_to_data:
          type: array
          description: |
            An array of product UIDs or category IDs on which the coupon will be applied. This field is relevant only if `apply_to` is set to `products`, `categories`, or `excluded_products`. 
            - When `apply_to` is set to `products` or `categories`, the coupon will apply only to the items or categories specified in this array.
            - When `apply_to` is set to `excluded_products`, the coupon will apply to all items except those specified in this array.
          examples:
            - - UID1
              - UID2
          items:
            type: string
    DiscountRules:
      type: object
      properties:
        status:
          type: object
          description: Response status
        discount_rules:
          type: array
          description: Array of the store's bundle discount rules
          items:
            $ref: '#/components/schemas/DiscountRule'
        page:
          type: integer
          description: The current page of the pagination result
          examples:
            - 1
        next_page:
          type:
            - integer
            - 'null'
          description: The next page of the pagination result. `null` if there is no next page.
          examples:
            - null
        last_page:
          type: integer
          description: The last page of the pagination result
          examples:
            - 1
        total:
          type: integer
          description: The total number of results
          examples:
            - 1
        message:
          type: object
          description: Message with status information
    DiscountRule:
      type: object
      description: Details of a single discount rule.
      properties:
        id:
          type: string
          description: Unique identifier of the discount rule
          examples:
            - 652285f7-11af-41ca-85cb-b2b9a18b9137
        name:
          type: object
          properties:
            en:
              type: string
              examples:
                - 'Buy One, Get One Free'
            ar:
              type: string
              examples:
                - اشتر واحدة واحصل على واحدة مجانًا
        description:
          type: object
          properties:
            en:
              type: string
              examples:
                - 'When you purchase this product, you will receive a 50% discount on selected products.'
            ar:
              type: string
              examples:
                - عند شرائك لهذا المنتج، ستحصل على خصم 50% على المنتجات المختارة.
        code:
          type: string
          description: The discount code the Customer inserts on the checkout page in order to activate the bundle offer.
          examples:
            - 2FOR1BUNDLE
        conditions:
          type: array
          description: Conditions required to activate the discount rule
          items:
            $ref: '#/components/schemas/DiscountRuleCondition'
        actions:
          type: array
          description: Actions taken once conditions of the discount rule are met
          items:
            $ref: '#/components/schemas/DiscountRuleAction'
        conditions_criteria:
          type: string
          description: 'Criteria to meet for the conditions to apply (e.g., "all", "any")'
          examples:
            - all
        uses_total:
          type: integer
          description: Total number of uses allowed for this discount rule.
          examples:
            - 100
        uses_customer:
          type: integer
          description: Total number of uses allowed per customer for this discount rule.
          examples:
            - 1
        enabled:
          type: boolean
          description: 'Activation Status of the discount rule, whether it''s enabled or not'
          examples:
            - true
        auto_adding:
          type: boolean
          description: 'Whether the discount rule is automatically added to the cart. If `true`, the discount rule will be automatically applied to the basket if its conditions are met.'
          examples:
            - true
        status_code:
          type: string
          description: Current status code of the discount rule.
          examples:
            - expired
        start_date:
          type: string
          description: Start date of the discount rule
          format: date
          examples:
            - '2022-06-01'
        end_date:
          type: string
          description: End date of the discount rule
          format: date
          examples:
            - '2022-06-30'
        meta:
          type: object
          description: Additional metadata for the discount rule
          properties:
            category_id:
              type: string
              description: Category identifier associated with the discount rule
              examples:
                - '387031'
            auto_add_products:
              type: boolean
              description: Whether products are automatically added to the discount
              examples:
                - true
    DiscountRuleCondition:
      type: object
      description: A single condition of a discount rule
      properties:
        field:
          type: string
          description: The field that the condition applies to
          examples:
            - products_quantity
        value:
          type: integer
          description: The threshold value for the condition
          examples:
            - 1
        operator:
          type: string
          description: The operator used to compare the field and the value
          examples:
            - '>='
        product_ids:
          type: array
          description: List of product identifiers to which the condition applies
          items:
            type: string
        products:
          $ref: '#/components/schemas/Products'
    DiscountRuleAction:
      type: object
      description: A single action of a discount rule. The action type can either be `fixed` or `percentage`. A `fixed` type means that an absolute amount would be discounted while `percentage` means a percentage of the original price would be discounted.
      properties:
        type:
          type: string
          description: 'The type of the action, either ''fixed'' or ''percentage'''
          examples:
            - percentage
        field:
          type: string
          description: The field that the action applies to
          examples:
            - products
        value:
          type: integer
          description: The value by which the field is modified
          examples:
            - 50
        product_ids:
          type: array
          items:
            type: string
        products_quantity:
          type: integer
          description: The number of products to apply the action to
          examples:
            - 1
        products:
          $ref: '#/components/schemas/Products'
    OrdersListResponse:
      type: object
      description: A list of orders with associated metadata and store settings.
      properties:
        status:
          type: string
          description: The status of the response.
          examples:
            - object
        orders:
          type: array
          description: A list of orders.
          items:
            $ref: '#/components/schemas/Order'
        total_order_count:
          type: integer
          description: The total number of orders.
          examples:
            - 887
        total_order_count_per_status:
          $ref: '#/components/schemas/OrderStatusCount'
        tax_settings:
          type: array
          description: Settings related to tax.
          examples:
            - []
          items:
            type: string
        storeColors:
          $ref: '#/components/schemas/StoreColors'
        printed_invoice_settings:
          $ref: '#/components/schemas/PrintedInvoiceSettings'
        message:
          $ref: '#/components/schemas/ResponseMessage'
    Order:
      type: object
      title: Order
      properties:
        id:
          type: integer
          description: The unique identifier for the order.
          examples:
            - 25304285
        code:
          type: string
          description: The code associated with the order.
          examples:
            - 8OVNEhyqcf
        store_id:
          type: integer
          description: The unique identifier for the store where the order was placed.
          examples:
            - 251073
        order_url:
          type: string
          description: The URL link to the order's invoice.
          examples:
            - 'https://zid.store/osama/o/6IJWXOYLuR/inv'
        store_name:
          type: string
          description: The name of the store.
          examples:
            - Osama's Store
        shipping_method_code:
          type: string
          description: The code representing the shipping method used for the order.
          examples:
            - custom
        store_url:
          type: string
          description: The URL link to the store.
          examples:
            - 'https://zid.store/osama/'
        order_status:
          $ref: '#/components/schemas/OrderStatus'
        currency_code:
          type: string
          description: The code representing the currency used for the order.
          examples:
            - KWD
        customer:
          $ref: '#/components/schemas/OrderCustomer'
        has_different_consignee:
          type: boolean
          description: Indicates if the consignee is different from the customer.
          examples:
            - false
        is_guest_customer:
          type: boolean
          description: Indicates if the order was placed by a guest customer.
          examples:
            - false
        is_gift_order:
          type: boolean
          description: Indicates if the order is a gift.
          examples:
            - false
        gift_card_details:
          type: object
          description: Details of any gift card associated with the order.
          properties:
            card_design:
              type: string
              description: The design of the gift card.
              examples:
                - Birthday Theme
            gift_message:
              type: string
              description: A message associated with the gift card.
              examples:
                - 'Happy Birthday, Ahmed! Wishing you all the best.'
            media_link:
              type: string
              description: 'A link to any media associated with the gift card, such as an image or video.'
              examples:
                - 'https://example.com/gift_card_image.jpg'
            receiver_name:
              type: string
              description: The name of the person receiving the gift card.
              examples:
                - Ahmed Al-Salem
            sender_name:
              type: string
              description: The name of the person sending the gift card.
              examples:
                - Fatima Al-Rashed
        order_total:
          type: string
          description: The total amount of the order.
          examples:
            - '6.00000000000000'
        order_total_string:
          type: string
          description: The total amount of the order in a human-readable format.
          examples:
            - 6.00 KWD
        has_different_transaction_currency:
          type: boolean
          description: Indicates if the transaction currency is different from the order currency.
          examples:
            - true
        transaction_reference:
          type: string
          description: The reference number for the transaction.
          examples:
            - TRN-123456
        transaction_amount:
          type: number
          description: The amount of the transaction.
          examples:
            - 60
        transaction_amount_string:
          type: string
          description: The amount of the transaction in a human-readable format.
          examples:
            - 60.00 SAR
        issue_date:
          type: string
          description: The date and time when the order was issued.
          examples:
            - '04-07-2023 | 12:12 م'
        payment_status:
          type: string
          enum:
            - paid
            - pending
            - refunded
            - voided
          description: |
            The payment status of the order.

            1. `paid`: Payment has successfully completed.
            1. `pending`: Payment is still pending or hasn't been made yet.
            1. `refunded`: Payment has been refunded to the Customer.
            1. `voided`: Payment has been voided or canceled.
          examples:
            - paid
        source:
          type: string
          description: |
            The human-readable name indicating the source where the order was created.  This field is localized and provides a description of the sale channel, e.g., "Store" or "المتجر الإلكتروني".
          examples:
            - Store
        source_code:
          type: string
          enum:
            - pos
            - catalog
            - md
            - mazeed
            - mazeed_marketplace
            - mobile_app
            - api
          description: |
            The code indicating the source or channel of the order. This can be one of several predefined values:
            - **pos**: Point of Sale (typically used in physical stores).
            - **catalog**: Order was made through a product catalog or online storefront.
            - **md**. Order was made from the Merchant Dashboard.
            - **mazeed_marketplace**: Order was made through Mazeed.
            - **mazeed**: Order was made at the Merchant's Store, but the Customer was redirected from Mazeed to the Merchant's Store.
            - **mobile_app**: Order was made through the store's mobile application.
            - **api**: Order was made through an API call, typically from third-party integrations or apps.
          examples:
            - catalog
        is_reseller_transaction:
          type: boolean
          description: 'Indicates if the order was made by a reseller intending to sell the products to end consumers, rather than for personal use.'
          examples:
            - false
        created_at:
          type: string
          description: The date and time when the order was created.
          examples:
            - '2023-07-04 09:12:36'
        updated_at:
          type: string
          description: The date and time when the order was last updated.
          examples:
            - '2023-07-04 09:14:28'
        tags:
          type: array
          description: Any tags associated with the order.
          examples:
            - []
          items:
            type: string
        requires_shipping:
          type: boolean
          description: Indicates if the order requires shipping.
          examples:
            - true
        shipping:
          $ref: '#/components/schemas/OrderShipping'
        payment:
          $ref: '#/components/schemas/OrderPayment'
        cod_confirmed:
          type: boolean
          description: Indicates if the Cash On Delivery (COD) payment is confirmed.
          examples:
            - false
        reverse_order_label_request:
          type:
            - string
            - 'null'
          description: Any request for a reverse order label.
          examples:
            - null
        customer_note:
          type:
            - string
            - 'null'
          description: Any note provided by the customer regarding the order.
          examples:
            - أحتاج تغليف هدية
        gift_message:
          type:
            - string
            - 'null'
          description: Any gift message associated with the order.
          examples:
            - كل عام وأنتم بخير
        payment_link:
          type:
            - string
            - 'null'
          description: 'The link for payment, if applicable.'
          examples:
            - 'https://payment.example.sa/order/123456'
        weight:
          type: number
          description: The weight of the order in grams.
          examples:
            - 500
        weight_cost_details:
          type: object
          description: Details about the cost of the weight of the order.
          properties:
            weight_total:
              type: integer
              description: The total weight of the order in grams.
              examples:
                - 150
            weight_total_string:
              type: string
              description: The total weight of the order in a human-readable format.
              examples:
                - 150 gm
            cost:
              type: string
              description: The cost associated with the weight of the order.
              examples:
                - 1.000 KWD
            cost_string:
              type: string
              description: The cost associated with the weight of the order in a human-readable format.
              examples:
                - 1 KWD
        currency:
          $ref: '#/components/schemas/OrderCurrency'
        coupon:
          type: string
          description: Any coupon code applied to the order.
          examples:
            - SUMMER20
        products:
          $ref: '#/components/schemas/OrderProducts'
        products_count:
          type: integer
          description: The total number of products in the order.
          examples:
            - 1
        products_sum_total_string:
          type: string
          description: The total sum of all products in the order in a human-readable format.
          examples:
            - 30.00 SAR
        language:
          type: string
          description: The language used to diplay the order's page.
          examples:
            - ar
        histories:
          type: array
          description: A list of historical records associated with the order.
          items:
            $ref: '#/components/schemas/OrderHistory'
        is_reactivated:
          type: boolean
          description: Indicates if the order was previously canceled or closed and has since been reopened or reactivated.
          examples:
            - false
        return_policy:
          type: string
          description: A human-readable string describing the return policy of the order.
          examples:
            - Returns are accepted within 14 days of receipt.
        packages_count:
          type: integer
          description: The number of packages in the order.
          examples:
            - 1
        inventory_address:
          type: string
          description: The address of the inventory for the order.
          examples:
            - '123 King Fahd Road, Al Olaya, Riyadh 12212, Saudi Arabia'
        reseller_meta:
          type: string
          description: Metadata associated with the reseller.
          examples:
            - null
        previous_order:
          type: integer
          description: 'The ID of the previous order, if any.'
          examples:
            - 23874634
        next_order:
          type: integer
          description: 'The ID of the next order, if any.'
          examples:
            - null
        invoice_settings:
          type: object
          properties:
            is_order_notifications_enabled:
              type: boolean
              description: Indicates if order notifications are enabled.
              examples:
                - true
        comment:
          type: string
          description: Any comments or notes about the order.
          examples:
            - This is a VIP customer. Handle with extra care.
    OrderStatus:
      type: object
      title: OrderStatus
      properties:
        name:
          type: string
          description: The human-readable status name of the order. This string is displayed on the order's page and the Merchant dashboard.
          examples:
            - Delivery in progress
        code:
          type: string
          enum:
            - new
            - failed
            - refunded
            - reversed
            - chargeback
            - expired
            - processed
            - voided
            - ready
            - processingReverse
            - preparing
            - inDelivery
            - delivered
            - canceled
            - denied
            - canceledReversal
          description: |
            The status code of the order. Each code represents a specific state of the order:

            1. `new`: The order has been recently created.
            1. `failed`: The order transaction failed.
            1. `refunded`: The order has been refunded (typically by the merchant).
            1. `reversed`: The order payment has been reversed (typically by the payment provider or the bank).
            1. `chargeback`: A chargeback has been initiated for the order.
            1. `expired`: The order has expired due to non-payment.
            1. `processed`: The order has been processed.
            1. `voided`: The order has been voided.
            1. `ready`: The order is ready for shipment.
            1. `processingReverse`: The order is in the process of being reversed.
            1. `preparing`: The order is being prepared for shipment.
            1. `inDelivery`: The order is currently in delivery.
            1. `delivered`: The order has been delivered.
            1. `canceled`: The order has been canceled.
            1. `denied`: The order has been denied.
            1. `canceledReversal`: The reversal of the order has been canceled.
          examples:
            - delivered
      required:
        - name
        - code
    OrderCustomer:
      type: object
      properties:
        name:
          type: string
          description: The name of the customer.
          examples:
            - Ahmed Al-Salem
        email:
          type: string
          description: The email address of the customer.
          examples:
            - ahmed.alsalem@example.com
        phone:
          type: string
          description: The phone number of the customer.
          examples:
            - '+966501234567'
        address:
          type: string
          description: The address of the customer.
          examples:
            - '456 Tariq Rd, Al Murabba, Riyadh 12631, Saudi Arabia'
    OrderShipping:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/OrderShippingMethod'
        address:
          $ref: '#/components/schemas/OrderShippingAddress'
    OrderShippingMethod:
      type: object
      title: OrderShippingMethod
      properties:
        id:
          type: string
          description: The unique identifier of the shipping method.
          examples:
            - SHM-123456
        name:
          type: string
          description: The name of the shipping method.
          examples:
            - Express Delivery
        code:
          type: string
          description: The code of the shipping method.
          examples:
            - EXP_DEL
        estimated_delivery_time:
          type: string
          description: The estimated delivery time of the shipping method.
          examples:
            - 3-5 Business Days
        icon:
          type: string
          description: The icon URL of the shipping method.
          examples:
            - 'https://cdn.example.com/icons/shipping/express_delivery.png'
        is_system_option:
          type: boolean
          description: Indicates if the shipping method is a default option provided by the platform.
          examples:
            - false
        waybill:
          type: string
          description: The waybill of the shipping method.
          examples:
            - WB-12345678
        waybill_tracking_id:
          type: string
          description: The tracking id of the waybill of the shipping method.
          examples:
            - TRACK-12345678
        has_waybill_and_packing_list:
          type: boolean
          description: Indicates if the shipping method includes both a waybill (shipment details and instructions) and a packing list (detailed list of items in the shipment).
          examples:
            - false
        tracking:
          type: object
          description: The tracking details of the shipping method.
          properties:
            number:
              type: string
              description: The tracking number.
              examples:
                - TRACK-12345678
            status:
              type: string
              description: The status of the shipment.
              examples:
                - In Transit
            url:
              type: string
              description: The URL for tracking the shipment.
              examples:
                - 'https://example.com/track?number=TRACK-12345678'
        courier:
          type: string
          description: The courier for the shipping method.
          examples:
            - FedEx
        return_shipment:
          type: string
          description: The return shipment details of the shipping method.
          examples:
            - RET-12345678
      required:
        - name
        - code
        - is_system_option
    OrderShippingAddress:
      type: object
      properties:
        formatted_address:
          type:
            - string
            - 'null'
          description: The full formatted address.
          examples:
            - '123 Al-Madinah St, Al-Sulimaniyah, Riyadh'
        street:
          type: string
          description: The street name or number.
          examples:
            - Al-Madinah St
        district:
          type: string
          description: The district or area name.
          examples:
            - Al-Sulimaniyah
        lat:
          type:
            - string
            - 'null'
          description: The latitude coordinate of the address.
          examples:
            - 24.7136
        lng:
          type:
            - string
            - 'null'
          description: The longitude coordinate of the address.
          examples:
            - 46.6753
        meta:
          type: object
          description: Meta data of an Order's shipping address.
          properties:
            buyer:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the buyer associated with the address.
                  examples:
                    - Ahmed Al-Saud
                type:
                  type: string
                  description: 'The type of the buyer (e.g., individual, business).'
                  examples:
                    - individual
                email:
                  type: string
                  description: The email address of the buyer.
                  examples:
                    - ahmed@example.sa
                telephone:
                  type: string
                  description: The telephone number of the buyer.
                  examples:
                    - '966501234567'
        city:
          $ref: '#/components/schemas/City'
        country:
          $ref: '#/components/schemas/Country'
    OrderPayment:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/OrderPaymentMethod'
        invoice:
          type: array
          description: A list of invoice details related to the payment.
          items:
            $ref: '#/components/schemas/InvoiceDetail'
    OrderPaymentMethod:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the payment method.
          examples:
            - 1
        enabled:
          type: boolean
          description: Indicates if the payment method is enabled.
          examples:
            - true
        code:
          type: string
          description: The code representing the payment method.
          examples:
            - zid_cod
        fees:
          type: number
          description: The fees associated with the payment method.
          examples:
            - 5
        fees_string:
          type: string
          description: The fees associated with the payment method in a human-readable format.
          examples:
            - 5.00 SAR
        type:
          type: string
          description: The type of the payment method.
          examples:
            - zid_cod
        name:
          type: object
          description: The name of the payment method in multiple languages.
          properties:
            en:
              type: string
              description: The name of the payment method in English.
              examples:
                - Cash on Delivery
            ar:
              type: string
              description: The name of the payment method in Arabic.
              examples:
                - الدفع عند الاستلام
        icon:
          type:
            - string
            - 'null'
          description: The URL link to the icon representing the payment method.
          examples:
            - 'https://example.com/payment-icon.png'
    InvoiceDetail:
      type: object
      properties:
        code:
          type: string
          description: |
            Represents the type of invoice detail. The possible values for this field are:
            - `sub_totals_before_vat`: المجموع غير شامل الضريبة - Represents the total amount before the application of VAT.
            - `taxable_amount`: المبلغ الخاضع للضريبة - The amount that is subject to VAT.
            - `vat`: ضريبة القيمة المضافة (15%) - Value Added Tax applied to the taxable amount.
            - `sub_totals`: قيمة المنتجات - Represents a general total in cases where VAT doesn't apply or VAT is already included in the price of each item.
            - `sub_totals_after_vat`: مجموع المنتجات شامل ضريبة القيمة المضافة - Represents the total amount after the application of VAT.
            - `coupon`: خصم - Represents any discount applied to the order.
            - `shipping`: التوصيل - Cost associated with the delivery of the order.
            - `shipping_discount`: خصم التوصيل - Discount applied to the shipping cost.
            - `zid_cod`: دفع عند الإستلام - Represents the Cash on Delivery payment method.
            - `total`: المجموع الكلي - The grand total amount for the order.
          examples:
            - sub_totals
        value:
          type: string
          description: The monetary value associated with the invoice detail.
          examples:
            - '30.00000000000000'
        value_string:
          type: string
          description: The monetary value in a human-readable format.
          examples:
            - 30.00 SAR
        title:
          type: string
          description: A descriptive title for the invoice detail.
          examples:
            - قيمة المنتجات
    OrderCurrency:
      type: object
      properties:
        order_currency:
          type: object
          properties:
            id:
              type: integer
              description: The unique identifier for the currency.
              examples:
                - 4
            code:
              type: string
              description: 'The code representing the currency (e.g., USD, SAR).'
              examples:
                - SAR
            exchange_rate:
              type: number
              description: The exchange rate of the order's currency relative to the store's currency.
              examples:
                - 1
        order_store_currency:
          type: object
          properties:
            id:
              type: integer
              description: The unique identifier for the currency.
              examples:
                - 4
            code:
              type: string
              description: 'The code representing the currency (e.g., USD, SAR).'
              examples:
                - SAR
            exchange_rate:
              type:
                - number
                - 'null'
              description: |
                The exchange rate in this object is typically `null` because it is comparing the store currency relative to itself.
              examples:
                - null
    OrderProducts:
      type: array
      description: A list of products included in the order.
      items:
        type: object
        properties:
          id:
            type: string
            description: The unique identifier for the product.
            examples:
              - 5a1b2c3d4e5f6g7h8i9j
          parent_id:
            type:
              - string
              - 'null'
            description: 'The parent ID of the product, if applicable.'
            examples:
              - 4a3b2c1d
          product_class:
            type:
              - string
              - 'null'
            description: The class or category of the product.
            examples:
              - Electronics
          name:
            type: string
            description: The name of the product.
            examples:
              - سماعات بلوتوث
          sku:
            type: string
            description: The Stock Keeping Unit identifier for the product.
            examples:
              - Z.987654.1234567890
          custom_fields:
            type: array
            description: Any custom fields related to the product.
            examples:
              - - 'Color: Red'
                - 'Size: M'
          quantity:
            type: integer
            description: The quantity of the product in the order.
            examples:
              - 2
          weight:
            type:
              - number
              - 'null'
            description: The weight of the product in grams.
            examples:
              - 150
          is_taxable:
            type: boolean
            description: Indicates if the product is taxable.
            examples:
              - true
          is_discounted:
            type: boolean
            description: Indicates if the product is discounted.
            examples:
              - false
          vouchers:
            type:
              - string
              - 'null'
            description: Any vouchers or coupons applied to the product.
            examples:
              - SUMMER21
          meta:
            type:
              - object
              - 'null'
            description: Meta information related to the product.
            examples:
              - brand: Sony
          net_price_with_additions:
            type: number
            description: The net price of the product with any additional costs.
            examples:
              - 50
          net_price_with_additions_string:
            type: string
            description: 'The net price of the product with any additional costs, in a string format.'
            examples:
              - 50.00 SAR
          price_with_additions:
            type: number
            description: The price of the product with any additional costs.
            examples:
              - 55
          price_with_additions_string:
            type: string
            description: 'The price of the product with any additional costs, in a string format.'
            examples:
              - 55.00 SAR
          net_price:
            type: number
            description: The net price of the product.
            examples:
              - 50
          net_price_string:
            type: string
            description: 'The net price of the product, in a string format.'
            examples:
              - 50.00 SAR
          net_sale_price:
            type:
              - number
              - 'null'
            description: The net sale price of the product.
            examples:
              - 45
          net_sale_price_string:
            type:
              - string
              - 'null'
            description: 'The net sale price of the product, in a string format.'
            examples:
              - 45.00 SAR
          net_additions_price:
            type: number
            description: The net price of any additional items or services added to the product.
            examples:
              - 0
          net_additions_price_string:
            type:
              - string
              - 'null'
            description: 'The net price of any additional items or services added to the product, in a string format.'
            examples:
              - 0.00 SAR
          gross_price:
            type: number
            description: The total price of the product before any discounts or taxes.
            examples:
              - 0
          gross_price_string:
            type: string
            description: 'The total price of the product before any discounts or taxes, in a string format.'
            examples:
              - 0.00 SAR
          gross_sale_price:
            type:
              - number
              - 'null'
            description: The sale price of the product before any discounts or taxes.
            examples:
              - 25
          gross_sale_price_string:
            type:
              - string
              - 'null'
            description: 'The sale price of the product before any discounts or taxes, in a string format.'
            examples:
              - 25.00 SAR
          price_before:
            type:
              - number
              - 'null'
            description: The price of the product before any current promotions or discounts.
            examples:
              - 35
          price_before_string:
            type:
              - string
              - 'null'
            description: 'The price of the product before any current promotions or discounts, in a string format.'
            examples:
              - 35.00 SAR
          total_before:
            type:
              - number
              - 'null'
            description: The total price of the product before any current promotions or discounts.
            examples:
              - 35
          total_before_string:
            type:
              - string
              - 'null'
            description: 'The total price of the product before any current promotions or discounts, in a string format.'
            examples:
              - 35.00 SAR
          gross_additions_price:
            type: number
            description: The total price of any additional items or services added to the product.
            examples:
              - 0
          gross_additions_price_string:
            type:
              - string
              - 'null'
            description: 'The total price of any additional items or services added to the product, in a string format.'
            examples:
              - 0.00 SAR
          tax_percentage:
            type: number
            description: The tax percentage applied to the product.
            examples:
              - 5
          tax_amount:
            type: string
            description: The tax amount applied to the product.
            examples:
              - '1.50'
          tax_amount_string:
            type: string
            description: 'The tax amount applied to the product, in a string format.'
            examples:
              - 1.50 SAR
          tax_amount_string_per_item:
            type: string
            description: 'The tax amount applied per item of the product, in a string format.'
            examples:
              - 0.75 SAR
          price:
            type: number
            description: The final price of the product.
            examples:
              - 30
          price_string:
            type: string
            description: 'The final price of the product, in a string format.'
            examples:
              - 30.00 SAR
          additions_price:
            type: number
            description: The price of any additional items or services added to the product.
            examples:
              - 0
          additions_price_string:
            type: string
            description: 'The price of any additional items or services added to the product, in a string format.'
            examples:
              - 0.00 SAR
          total:
            type: number
            description: The total price of the product including any additional items or services.
            examples:
              - 30
          total_string:
            type: string
            description: 'The total price of the product including any additional items or services, in a string format.'
            examples:
              - 30.00 SAR
          images:
            type: array
            description: A list of images related to the product.
            items:
              $ref: '#/components/schemas/ProductImage'
          options:
            type: array
            description: Any options related to the product.
            examples:
              - - 'Color: Red'
                - 'Size: M'
    OrderHistory:
      type: object
      properties:
        order_status_id:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 5
            - 7
            - 12
            - 17
            - 18
          description: |
            The unique identifier for the order status. Each ID corresponds to a specific status code of the order:

            1. `1`: Corresponds to `new` (The order has been recently created).
            2. `2`: Corresponds to `preparing` (The order is being prepared for shipment).
            3. `3`: Corresponds to `inDelivery`.
            4. `5`: Corresponds to `delivered`.
            5. `7`: Corresponds to `canceled`.
            6. `12`: Corresponds to `reversed` (The order payment has been reversed).
            7. `17`: Corresponds to `ready` (The order is ready for shipment).
            8. `18`: Corresponds to `processingReverse` (The order is in the process of being reversed).

            For a detailed description of each status code, please refer to the [`OrderStatus`](6syqus5mk8zjv) schema.
        order_status_name:
          type: string
          description: The name of the order status.
          examples:
            - جديد
        changed_by_id:
          type: integer
          description: The unique identifier of the entity/person who changed the order status.
          examples:
            - 37
        changed_by_type:
          type: string
          description: 'The type of entity/person who changed the order status (e.g., customer, manager).'
          examples:
            - عميل
        changed_by_details:
          type: object
          description: Details about the entity/person who changed the order status.
          properties:
            action:
              type: string
              description: The action that was taken on the order.
              examples:
                - تم إنشاء الطلب .
            by:
              type: string
              description: The name of the entity/person who took the action.
              examples:
                - Ahmed Al-Saud
            comment:
              type:
                - string
                - 'null'
              description: Any comment or note related to the action taken.
              examples:
                - Manually created after size-change request. Check inventory.
        comment:
          type: string
          description: A comment or note about the order history event.
          examples:
            - تم إنشاء الطلب .
        created_at:
          type: string
          description: The timestamp when the order history event was created.
          format: date-time
          examples:
            - '2023-07-04 09:12:36'
        humanized_created_at:
          type: string
          description: A human-readable representation of the time elapsed since the order history event was created.
          examples:
            - منذ شهر
    OrderStatusCount:
      type: object
      description: A breakdown of the number of orders based on their statuses.
      properties:
        new:
          type: integer
          description: Number of orders with 'new' status.
          examples:
            - 323
        failed:
          type: integer
          description: Number of orders that have failed.
          examples:
            - 10
        refunded:
          type: integer
          description: Number of orders that have been refunded.
          examples:
            - 5
        reversed:
          type: integer
          description: Number of orders that have been reversed.
          examples:
            - 1
        chargeback:
          type: integer
          description: Number of orders that have a chargeback.
          examples:
            - 2
        expired:
          type: integer
          description: Number of orders that have expired.
          examples:
            - 3
        processed:
          type: integer
          description: Number of orders that have been processed.
          examples:
            - 100
        voided:
          type: integer
          description: Number of orders that have been voided.
          examples:
            - 4
        ready:
          type: integer
          description: Number of orders that are ready.
          examples:
            - 138
        processingReverse:
          type: integer
          description: Number of orders that are processing a reversal.
          examples:
            - 6
        preparing:
          type: integer
          description: Number of orders being prepared.
          examples:
            - 21
        inDelivery:
          type: integer
          description: Number of orders in delivery.
          examples:
            - 88
        delivered:
          type: integer
          description: Number of orders that have been delivered.
          examples:
            - 178
        canceled:
          type: integer
          description: Number of orders that have been cancelled.
          examples:
            - 135
        denied:
          type: integer
          description: Number of orders that have been denied.
          examples:
            - 7
        canceledReversal:
          type: integer
          description: Number of orders where a reversal has been canceled.
          examples:
            - 8
    StoreColors:
      type: object
      description: Color configurations for various store UI elements.
      properties:
        btn_default_background_color:
          type: string
          description: Default background color for buttons.
          examples:
            - '#b053ac'
        btn_default_text_color:
          type: string
          description: Default text color for buttons.
          examples:
            - '#ffffff'
        btn_default_border_color:
          type: string
          description: Default border color for buttons.
          examples:
            - '#a04b9c'
        btn_hover_background_color:
          type: string
          description: Background color for buttons on hover.
          examples:
            - '#bf5abb'
        btn_pressed_background_color:
          type: string
          description: Background color for buttons when pressed.
          examples:
            - '#a04b9c'
        btn_pressed_text_color:
          type: string
          description: Text color for buttons when pressed.
          examples:
            - '#ffffff'
        btn_pressed_border_color:
          type: string
          description: Border color for buttons when pressed.
          examples:
            - '#a04b9c'
    PrintedInvoiceSettings:
      type: object
      description: Settings related to the content and appearance of printed invoices.
      properties:
        is_tax_number_active:
          type: boolean
          description: Indicates if the tax number is active on the printed invoice.
          examples:
            - true
        is_return_policy_active:
          type: boolean
          description: Indicates if the return policy is active on the printed invoice.
          examples:
            - true
        is_products_weight_active:
          type: boolean
          description: Indicates if the products' weight is displayed on the printed invoice.
          examples:
            - true
        is_barcode_active:
          type: boolean
          description: Indicates if a barcode is displayed on the printed invoice.
          examples:
            - true
        is_qr_code_active:
          type: boolean
          description: Indicates if a QR code is displayed on the printed invoice.
          examples:
            - true
        is_expected_time_active:
          type: boolean
          description: Indicates if the expected delivery time is displayed on the printed invoice.
          examples:
            - true
        is_store_address_active:
          type: boolean
          description: Indicates if the store address is displayed on the printed invoice.
          examples:
            - true
        is_vat_settings_active:
          type: boolean
          description: Indicates if VAT settings are active on the printed invoice.
          examples:
            - true
        is_sku_active:
          type: boolean
          description: Indicates if the SKU is displayed on the printed invoice.
          examples:
            - true
        is_thanks_msg_active:
          type: boolean
          description: Indicates if a thank you message is displayed on the printed invoice.
          examples:
            - true
        is_order_status_active:
          type: boolean
          description: Indicates if the order status is displayed on the printed invoice.
          examples:
            - true
        is_discount_coupon_active:
          type: boolean
          description: Indicates if any discount coupon is displayed on the printed invoice.
          examples:
            - true
        config_logo:
          type: string
          description: The URL of the logo displayed on the printed invoice.
          examples:
            - 'https://example.com/logo-200x.png'
        store_business_address:
          type: string
          description: The business address of the store displayed on the printed invoice.
          examples:
            - 'Example Address, Riyadh, Saudi Arabia'
        store_business_name:
          type: string
          description: The business name of the store displayed on the printed invoice.
          examples:
            - ExampleStore
        store_business_type:
          type: string
          description: The type of business of the store.
          examples:
            - establishment
        commercial_number:
          type: string
          description: The commercial number of the store.
          examples:
            - '1234567890'
        is_payment_stamp_active:
          type: boolean
          description: Indicates if a payment stamp is displayed on the printed invoice.
          examples:
            - true
        is_order_notifications_enabled:
          type: boolean
          description: Indicates if order notifications are enabled.
          examples:
            - true
    200-get-delivery-options:
      type: object
      properties:
        delivery_options:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              system_option_code:
                type:
                  - string
                  - 'null'
              select_cities:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    national_id:
                      type: integer
                    name:
                      type: string
                    priority:
                      type: integer
                    country_id:
                      type: integer
                    country_name:
                      type: string
                    country_code:
                      type: string
                    ar_name:
                      type: string
                    en_name:
                      type: string
        system_delivery_options:
          type: array
          items:
            type: object
        message:
          type: object
          properties:
            type:
              type: string
            code:
              type:
                - string
                - 'null'
            name:
              type:
                - string
                - 'null'
            description:
              type:
                - string
                - 'null'
      x-examples:
        Example 1:
          status: object
          delivery_options:
            - id: 1
              name: Custom Shipping Name
              system_option_code: null
              select_cities:
                - id: 1
                  national_id: 3
                  name: الرياض
                  priority: 10
                  country_id: 184
                  country_name: السعودية
                  country_code: SA
                  ar_name: الرياض
                  en_name: Riyadh
                - id: 71
                  national_id: 18
                  name: جدة
                  priority: 9
                  country_id: 184
                  country_name: السعودية
                  country_code: SA
                  ar_name: جدة
                  en_name: Jeddah
          system_delivery_options: []
          message:
            type: object
            code: null
            name: null
            description: null
    200-get-payment-methods:
      type: object
      properties:
        code:
          type: string
        payload:
          type: array
          items:
            type: object
            properties:
              enabled:
                type: integer
              code:
                type: string
              fees:
                type: integer
              fees_string:
                type: string
              type:
                type:
                  - string
                  - 'null'
              name:
                type: string
              icons:
                type: array
                examples:
                  - - 'https://zid-testing.s3.eu-west-1.amazonaws.com/static/cod.png'
              id:
                type: integer
    AppScript:
      type: object
      properties:
        url:
          type: string
          description: The URL of the script file.
          format: uri
          examples:
            - 'https://raw.githubusercontent.com/gharbat/js-cs/main/test.js'
        purchase_event:
          type: string
          description: JavaScript code to be executed when the Purchase event occurs.
          examples:
            - console.log(transactionItems)
        product_details_event:
          type: string
          description: JavaScript code to be executed when the Product Details event occurs.
          examples:
            - console.log(productViewd)
        add_to_cart_event:
          type: string
          description: JavaScript code to be executed when the Add To Cart event occurs.
          examples:
            - console.log(productCart)
        remove_from_cart_event:
          type: string
          description: JavaScript code to be executed when the Remove From Cart event occurs.
          examples:
            - console.log(productCart)
        start_checkout_event:
          type: string
          description: JavaScript code to be executed when the Start Checkout event occurs.
          examples:
            - console.log(cart)
      required:
        - url
    200-get-all-webhooks:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
        message:
          type: object
          properties:
            type:
              type: string
              description: |
                The type of message associated with the webhook retrieval.
        status:
          type: string
          description: |
            The status of the webhook retrieval operation.
    Webhook:
      type: object
      properties:
        status:
          type: object
          description: 'The status of the webhook creation request. Possible statuses codes are `ready`, `pending`, `inactive`, and `error`.'
        id:
          type: string
          description: The ID assigned to the webhook subscription by Zid.
          examples:
            - a1b2c3d4
        event:
          type: string
          description: The event that the webhook is subscribed to.
          examples:
            - order.status.update
        target_url:
          type: string
          description: The URL to which Zid will send a payload when the subscribed event triggers.
          examples:
            - 'http://zidstoreapp.com/webhook-endpoint'
        store_id:
          type: string
          description: The store ID associated with the webhook.
          examples:
            - '52317'
        conditions:
          type:
            - object
            - 'null'
          description: |
            The conditions under which the webhook will be triggered. These conditions were specified during the webhook creation and allow the webhook to be triggered only when certain criteria are met.

            **Supported Events: `order.create` and `order.status.update`**

            | Key | Type | Description |
            | --- | ---- | ----------- |
            | delivery_option_id | integer | The delivery option ID in Zid. |
            | status | string | One of these statuses: [new, preparing, ready, inDelivery, delivered, cancelled]. |
            | payment_method | string | One of these methods: [Cash On Delivery, Credit Card, Bank Transfer].
          examples:
            - '{"status": ["new", "ready", "inDelivery", "delivered"], "payment_method": ["Cash On Delivery", "Credit Card"]}'
        original_id:
          type:
            - string
            - 'null'
          description: An optional user-defined identifier for reference purposes.
          examples:
            - OrderUpdate123
        subscriber:
          type: string
          description: The name or identifier of the subscriber or the source of the webhook.
          examples:
            - InventoryManagerApp
        active:
          type: boolean
          description: Indicates whether the webhook is active or not.
          examples:
            - true
        message:
          $ref: '#/components/schemas/ResponseMessage'
          description: A message indicating the result of the webhook creation.
